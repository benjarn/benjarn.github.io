<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Mixu - Mixu's blog]]></title><description><![CDATA[A blog]]></description><link>http://localhost:5000/</link><generator>Ghost</generator><lastBuildDate>Mon, 06 Oct 2014 00:15:41 GMT</lastBuildDate><atom:link href="http://localhost:5000/author/foo/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Javascript, node.js and for loops]]></title><description><![CDATA[<p>What does this code print out? Assume that console.log logs to the console.</p>
<p><strong>Experiment #1: For loop</strong></p>
<pre class="hljs"><code><span class="hljs-transposed_variable">console.</span><span class="hljs-built_in">log</span>(<span class="hljs-string">&#39;For loop&#39;</span>);
<span class="hljs-keyword">for</span>(var <span class="hljs-built_in">i</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">i</span> &amp;lt; <span class="hljs-number">5</span>; <span class="hljs-built_in">i</span>++) <span class="hljs-cell">{
 console.log(i);
}</span></code></pre><p>0, 1, 2, 3, 4 - easy, right? What about this code?</p>
<p><strong>Experiment #2: setTimeout</strong></p>
<pre class="hljs"><code><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;setTimeout&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
  setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;st:&#39;</span>+i)}, <span class="hljs-number">0</span>);
}</code></pre><p>The result is 5, 5, 5, 5, 5.What about this?</p>
<p><strong>Experiment #3: Callback function</strong></p>
<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">wrap</span><span class="hljs-params">(callback)</span> </span>{
  callback();
}

<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;Simple wrap&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
  wrap(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(i)});
}</code></pre><p>0, 1, 2, 3, 4 -- right? (Yup.) And this?</p>
<p><strong>Experiment #4: While loop emulating sleep</strong></p>
<pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sleep</span><span class="hljs-params">(callback)</span> </span>{
  <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime();
  <span class="hljs-keyword">while</span>(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() &amp;lt; now + <span class="hljs-number">1000</span>) {
   <span class="hljs-comment">// do nothing</span>
  }
  callback();
}

<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;Sleep&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
  sleep(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(i)});
}</code></pre><p>0, 1, 2, 3, 4. And this?</p>
<p><strong>Experiment #5: Node.js process.nextTick</strong></p>
<pre class="hljs"><code><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;nextTick&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
 process.nextTick(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;nt:&#39;</span>+i)});
}</code></pre><p>Well... it&#39;s 5, 5, 5, 5, 5.</p>
<p><strong>Experiment #6: Delayed calls</strong></p>
<pre class="hljs"><code>var data = [];
for (var i = 0; i &amp;lt; 5; i++) {
  data[i] = function foo() {
<span class="hljs-code">    alert(i);</span>
  };
}
data<a href="span class=&quot;hljs-link_url&quot;&gt;&lt;/span"><span class="hljs-link_label">0</span></a>; data<a href="span class=&quot;hljs-link_url&quot;&gt;&lt;/span"><span class="hljs-link_label">1</span></a>; data<a href="span class=&quot;hljs-link_url&quot;&gt;&lt;/span"><span class="hljs-link_label">2</span></a>; data<a href="span class=&quot;hljs-link_url&quot;&gt;&lt;/span"><span class="hljs-link_label">3</span></a>; data<a href="span class=&quot;hljs-link_url&quot;&gt;&lt;/span"><span class="hljs-link_label">4</span></a>;</code></pre><p>Again, 5, 5, 5, 5, 5.</p>
<h2><strong>Ok, I&#39;m confused. Why does this happen?</strong></h2>

<p>Looking at experiments #1 to #6, you can see a pattern emerge: delayed calls, whether they are via setTimeout(), Node.js-specific process.nextTick() or a simple array of functions all print the unexpected result &quot;5&quot;.</p>
<p>Fundamentally, the only thing that matters is<strong> at what time the function code is executed</strong>. setTimeout() and process.nextTick() ensure that the function is only executed at some later stage. Similarly, assigning functions into an array explicitly like in Experiment #6 means that the code within the function is only executed after the loop has been completed.</p>
<p>There are three things you need to remember about Javascript:</p>
<p><ol>
    <li>Variable scope is based on the nesting of functions. In other words, the position of the function in the source always determines what variables can be accessed; nested functions can access their parent&#39;s variables, non-nested functions can only access the topmost, global variables.</li>
    <li>Functions can create new scopes; the default behavior is to access previous scope.</li>
    <li>Some functions have the side-effect of being event-driven and executed later, rather than immediately. You can emulate this yourself by storing but not executing functions, see Experiment #6.</li>
</ol>
What we would expect, based on experience in other languages, is that in the for loop, calling the function would result in a call-by-value (since we are passing a primitive - an integer) and that function calls would run using a copy of that value at the time when the part of the code was &quot;passed over&quot; (e.g. when the surrounding code was executed). That&#39;s not what happens:</p>
<p><strong>A</strong><strong> nested</strong><strong> function does not get a copy of the value of the variable -- it gets a live reference to the variable itself and can access it at a much later stage.</strong> So while the reference to <em>i</em> is valid in both experiment 2, 5, and 6 they refer to the value of i at the time of their execution - which is on the next event loop - which is after the loop has run - which is why they get the value 5.</p>
<p><strong>Functions <span style="text-decoration: underline;">can</span> create new scopes but they do not have to.</strong> The default behavior allows us to refer back to the previous scope (all the way up to the global scope); this is why code executing at a later stage can still access i. Because no variable <em>i </em>exists in the current scope, the <em>i </em>from the parent scope is used; because the parent has already executed, the value of <em>i</em> is 5.</p>
<p>Hence, we can fix the problem by explicitly establishing a new scope every time the loop is executed; then referring back to that new inner scope later.  The only way to do this is to use an (anonymous) function plus explicitly defining a variable in that scope. There are two ways to do this:</p>
<p>Option 1) We can allow the value of i to &quot;leak&quot; from the previous scope, but explicitly establish a new variable j in the new scope to hold that value for future execution of nested functions:</p>
<p><strong>Experiment #7: Closure with new scope establishing a new variable</strong></p>
<pre class="hljs"><code><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;new scope nexttick with value binding in new func scope&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
 (<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">var</span> j = i;
  process.nextTick(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;nexttick-new-scope-new-bind:&#39;</span>+j)});
 })();
}</code></pre><p>Resulting in 0, 1, 2, 3, 4. Accessing j returns the value of i at the time when the closure was executed - and as you can see, we are immediately executing the function by appending ();</p>
<p>We need to have that wrapping function, because only functions establish new scope. In fact, we are establishing five new scopes when the loop is run, each iteration creating a scope with its own, separate variable j with a different value (0, 1, 2, 3, 4); each accessible from the inner closure at the time the code in it is run. Without the wrapping closure the reference to j in the innermost closure would end up having the same scope as i; it would then have the value of i at the time of the execution; which would be 5.</p>
<p>Options 2: Or we can pass the value to the new scope as a parameter:</p>
<p><strong>Experiment #8: Settimeout in closure with new scope</strong></p>
<pre class="hljs"><code><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;new scope&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
 (<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(i)</span> </span>{
  setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;st2:&#39;</span>+i)}, <span class="hljs-number">0</span>);
 })(i);
}</code></pre><p>Resulting in 0, 1, 2, 3, 4.</p>
<p>Now you should remember one more rule to understand the second solution:</p>
<p><ul>
    <li>Functions can be passed as data; they are only evaluated when explicitly evaluated (e.g. by appending () or by using function.call or function.apply).</li>
</ul>
So when we have (function(param))(param), we are calling the function immediately and parameters always establish a new variable/identifier in the function scope; that allows us to use the i from the new scope  in our delayed function call - since it is bound to the parameter, not to the parent scope.</p>
<p>This also means that this does NOT work (process.nextTick is interchangeable with setTimeout):</p>
<p><strong>Experiment #9: Closure with new scope containing callback triggered on process.nextTick</strong></p>
<pre class="hljs"><code><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;new scope nexttick&#39;</span>);
<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">5</span>; i++) {
 (<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
  process.nextTick(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#39;nexttick-new-scope:&#39;</span>+i)});
 })();
}</code></pre><p>5, 5, 5, 5, 5 - since i still refers to the old scope. Compare that with experiment #7, where while the inner code is the same, we actually establish a new variable in the wrapping closure&#39;s scope, which is then referred to by the inner code.</p>
<p><strong>Conclusion</strong></p>
<p>I should note that this has nothing do to with synchronicity or asynchronicity; it is simply the way in which scope resolution works for Javascript when code execution is delayed in some manner while referring to variables defined in the parent scope of the nested code.</p>
<h2 id="comments">Comments</h2>
<p><strong><a href="#450" title="2011-02-11 23:33:19">Gabriel Farrell</a>:</strong> Great post, with a clear explanation I&#39;m sure I&#39;ll refer to whenever people (myself included) get tripped up by this feature of JS.</p>
<p>One question: is it really true to say &quot;this has nothing do to with synchronicity or asynchronicity&quot;? Could this happen without asynchronous execution?</p>
<p><strong><a href="#451" title="2011-02-12 00:12:28">Mikito Takada</a>:</strong> Good question. I think it is valid to say that it has nothing to do with asynchronicity as such because this is a feature of Javascript&#39;s <em>scope handling and evaluation strategy</em> - what Dimitry calls &quot;Call by sharing&quot; (e.g. scope can refer to variables which have been influenced by previous evaluations and primitives are not passed by copying but rather via &quot;sharing&quot;).</p>
<p>For instance, if variables were passed &quot;by copying&quot; (when a structure is passed by value to a function it is completely copied), then this problem would not exist even if callbacks could be stored for later execution since every function call in the for loop would get it&#39;s own value (the value of the variable at call time not at the time it would be run. So you could have a Javascript-like language that would avoid this problem - however, in most cases we want things to work exactly like Javascript does them; it&#39;s just the for loops where we would like the value of the variable to be copied at call time.</p>
<p>Having this kind of scope resolution/evaluation strategy makes implementing asynchronous operations easy... but I would say that it is not essential to writing asynchronous code, it just makes writing asynchronous code a lot easier.</p>
<p>So the technical root cause is the scope resolution/evaluation strategy. Asynchrony refers to the ability of events to occur independently of the main program flow; i.e. it is about interacting with event sources like file I/O, network I/O or user actions. Here, the fact that the code can be executed later is not the reason why the problem occurs since given alternative scope resolution/evaluation strategies this problem would not occur.</p>
<p>To answer your question: &quot;Could this happen without asynchronous execution?&quot; the answer is no, but if you ask &quot;Could asynchronous execution be possible without this happening?&quot; the answer is yes.</p>
<p>It&#39;s all a bit academic, but I think it&#39;s best to understand why the problem occurs rather than just be satisfied with saying that it is a side-effect of asynchronous execution...</p>
<p><strong><a href="#452" title="2011-06-01 05:32:51">Chris Jacob</a>:</strong> THANK YOU! I was going insane trying to figure out why I kept getting the last iteration value ... I went with Experiment #7.</p>
<p>I tried Experiment #8 but modified as: (function(j) { ... test here without setTimeout ... }(i); It didn&#39;t work - execution wasn&#39;t in &quot;order&quot;. Expect I need a delayed function call like setTimeout to wrap it as you said. (FYI: my output was contained inside a Facebook API call - so network delay may also be the cause of the sequencing issue).</p>
<p><strong><a href="#453" title="2011-06-01 05:50:56">Chris Jacob</a>:</strong> Hi Mikito,</p>
<p>I have referenced your article for this StackOverflow issue:</p>
<p>&quot;Saving FB.api call&#39;s response to an array with a for loop with Javascript.&quot;
<a href="http://stackoverflow.com/questions/5971124/saving-fb-api-calls-response-to-an-array-with-a-for-loop-with-javascript/6195695">http://stackoverflow.com/questions/5971124/saving-fb-api-calls-response-to-an-array-with-a-for-loop-with-javascript/6195695</a></p>
<p>My answer is here:
<a href="http://stackoverflow.com/questions/5971124/saving-fb-api-calls-response-to-an-array-with-a-for-loop-with-javascript/6195695#6195695">http://stackoverflow.com/questions/5971124/saving-fb-api-calls-response-to-an-array-with-a-for-loop-with-javascript/6195695#6195695</a></p>
<p>Could you please accept my answer if it&#39;s correct... or comment if I got it wrong. Cheers! ^_^</p>
<p><strong><a href="#454" title="2011-06-06 01:36:33">Josh</a>:</strong> Another strategy you might mention is from underscore -- <a href="http://documentcloud.github.com/underscore/#bind">http://documentcloud.github.com/underscore/#bind</a></p>
<p>for(var i =0;i&lt;5;i++){
   process.nextTick(_.bind(function(index){
       console.log(index);
   }, this, i));
}</p>
<p>This is used to both bind the &#39;this&#39; parameter, and to optionally pass additional parameters (technique called currying).</p>
<p><strong><a href="#455" title="2011-06-06 06:51:20">Mikito Takada</a>:</strong> Yeah, that works too, though you don&#39;t really need underscore.js to make this work. If you look at the code in underscore.js, it returns a new function which means that a new scope is established.</p>
<p> // Create a function bound to a given object (assigning <code>this</code>, and arguments,
  // optionally). Binding with arguments is also known as <code>curry</code>.
  // Delegates to <strong>ECMAScript 5</strong>&#39;s native <code>Function.bind</code> if available.
  // We check for <code>func.bind</code> first, to fail fast when <code>func</code> is undefined.
  _.bind = function(func, obj) {
    if (func.bind === nativeBind &amp;&amp; nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    var args = slice.call(arguments, 2);
    return function() {
      return func.apply(obj, args.concat(slice.call(arguments)));
    };
  };</p>
<p><strong><a href="#456" title="2011-06-07 08:12:14">Josh</a>:</strong> I agree, you don&#39;t need underscore here. To keep the code more vanilla, I&#39;d commonly use your &#39;Experiment #8&#39; approach. The benefit of _.bind or Function.bind is that you get the benefit of also controlling what &#39;this&#39; refers to, which is a common bummer in implementing the class pattern in js. Of course, these libraries are just returning a function that calls .apply(this) with some variant of argument slicing. Since I&#39;m usually depending on underscore, its all there in a pretty package :: shrug ::</p>
<p>Happy coding (and good article)!</p>
<p><strong><a href="#458" title="2012-02-17 22:32:18">John Quaresma</a>:</strong> Thanks for posting this.</p>
<p>It&#39;s an interesting way to frame the lexical closure problem, which is a very common javascript test given to potential job candidates.  I share Mikito&#39;s concern that the overall emphasis on execution order rather than scoping and closures may mislead some naive readers.  Specifically, the reason this &#39;problem&#39; exists is that all inner functions will refer to the address and not the value of the variables that exist in their containing scope / closure.   The only way to break this is to create a new closure, and by extension a new variable scope / address space.  You&#39;ve definitely addressed that here, but since it&#39;s not framed as being the main point of the post, it may be lost on some.</p>
<p><strong><a href="#459" title="2012-02-18 16:17:18">Andrea Giammarchi</a>:</strong> and suddenly, you discover this problem does not exists with timers:
for(var i = 0; i &lt; 5; ++i) {
  setTimeout(function(i){console.log(i)}, 1, i);
}
// 0, 1, 2, 3, 4</p>
<p>setTimeout, and setInterval, accepts everywhere but IE extra arguments that are passed to the function with the value bound at definition time.</p>
<p>It looks that who ever created nextTick in node, didn&#039;t know enough about JavaScript timers.</p>
<p>In specs even in W3C <a href="http://www.w3.org/TR/html5/timers.html">http://www.w3.org/TR/html5/timers.html</a></p>
<p><strong><a href="#460" title="2012-05-28 11:18:57">Ash Clark</a>:</strong> Thanks this was just what I needed!</p>
<p><strong><a href="#461" title="2012-05-28 11:19:51">Ash Clarke</a>:</strong> Thanks Mikito, this was just what I needed!</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Thu, 03 Feb 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Essential Node.js patterns and snippets]]></title><description><![CDATA[<p>In this post, I take a look at the different patterns that you need to know when using Node.js. These came from my own coding and from a look at the code behind Tim Caswell&#39;s flow control libraries. I think it is necessary to know how these basic patterns are implemented even if you use a library..</p>
<p><h1>1. Objects and classes</h1></p>
<h2><strong>1.1 Class pattern</strong></h2>

<pre class="hljs"><code>// Constructor
var <span class="hljs-class"><span class="hljs-keyword">Class</span> = <span class="hljs-title">function</span>(<span class="hljs-title">value1</span>, <span class="hljs-title">value2</span>) {</span>
  this.value1 = value1;
}
// properties <span class="hljs-literal">and</span> methods
<span class="hljs-class"><span class="hljs-keyword">Class</span>.<span class="hljs-title">prototype</span> = {</span>
  value1: <span class="hljs-string">&quot;default_value&quot;</span>,
  <span class="hljs-function"><span class="hljs-keyword">method</span>:</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(</span>argument) {
    this.value2 = argument + <span class="hljs-number">100</span>;
  }
};
// node.js <span class="hljs-keyword">module</span> export
<span class="hljs-keyword">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">Class</span>;</span></code></pre><pre class="hljs"><code><span class="hljs-comment">// constructor call</span></code></pre><pre class="hljs"><code><span class="hljs-keyword">var</span> <span class="hljs-class"><span class="hljs-keyword">object</span> =</span> <span class="hljs-keyword">new</span> <span class="hljs-type">Class</span>(<span class="hljs-string">&quot;Hello&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>);</code></pre><p>If the class is long, then instead of doing a single Class.prototype = {...} assignment, it may be split into multiple Class.prototype.method = function () {..} assignments.</p>
<p><strong><span style="text-decoration: underline;">Reminder</span></strong>: Assign all your properties some value in your constructor. Otherwise while the resulting object can access the property defined in the prototype, the prototype value is <em>shared among all instances</em>. So in order for your &quot;instance&quot; to actually own it&#39;s own copies, you have to explicitly initialize the variables in the constructor, or they will act like static variables in non-prototype-based OOP. It&#39;s a stupid mistake, don&#39;t make it.</p>
<h2>1.2 Accessing global values from objects</h2>

<pre class="hljs"><code><span class="hljs-regexp">//</span> constructor
<span class="hljs-reserved">var</span> Class = <span class="hljs-reserved">function</span>(<span class="hljs-built_in">global</span>, value2) {
  <span class="hljs-keyword">this</span>.<span class="hljs-built_in">global</span> = <span class="hljs-built_in">global</span>;
}
<span class="hljs-regexp">//</span> access using <span class="hljs-keyword">this</span>.<span class="hljs-built_in">global</span> <span class="hljs-keyword">in</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">methods</span></span></code></pre><h2>1.3 Factory pattern</h2>

<pre class="hljs"><code>// Constructor
var Class = <span class="hljs-keyword">function</span>(value1, value2) { <span class="hljs-keyword">...</span> }
// Factory
Class.factory(value1) { <span class="hljs-keyword">return</span> new Class(value1, <span class="hljs-string">&quot;aaa&quot;</span>); }
// properties and methods
Class.prototype = { <span class="hljs-keyword">...</span> };</code></pre><h2>1.4 Sharing state between modules</h2>


<pre class="hljs"><code><span class="hljs-reserved">var</span> Common = {
  <span class="hljs-attribute">util</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;util&#39;</span>),
  <span class="hljs-attribute">fs</span>:   <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;fs&#39;</span>),
  <span class="hljs-attribute">path</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;path&#39;</span>)
};

<span class="hljs-built_in">module</span>.exports = Common;

<span class="hljs-regexp">//</span> <span class="hljs-keyword">in</span> other modules
<span class="hljs-reserved">var</span> Common = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;./common.js&#39;</span>);</code></pre><h2>1.5 Singleton class (added Feb 2011)</h2>

<pre class="hljs"><code>var Singleton = (<span class="hljs-keyword">function</span>() {
   var private_variable = <span class="hljs-string">&#39;value&#39;</span>;
   <span class="hljs-keyword">function</span> private_function() {
      <span class="hljs-keyword">...</span>
   }
   <span class="hljs-keyword">function</span> public_function() {
      <span class="hljs-keyword">...</span>
   }
  <span class="hljs-keyword">return</span> {
      public_function: public_function
  };
})();</code></pre><p><h1>2. Parsing requests</h1></p>
<h2>2.1 Parsing GET</h2>


<pre class="hljs"><code><span class="hljs-comment">// parse URL</span>
<span class="hljs-built_in">var</span> url_parts <span class="hljs-subst">=</span> url<span class="hljs-built_in">.</span>parse(req<span class="hljs-built_in">.</span>url);
<span class="hljs-comment">// parse query</span>
<span class="hljs-built_in">var</span> raw <span class="hljs-subst">=</span> querystring<span class="hljs-built_in">.</span>parse(url_parts<span class="hljs-built_in">.</span>query);
<span class="hljs-comment">// some juggling e.g. for data from jQuery ajax() calls.</span>
<span class="hljs-built_in">var</span> <span class="hljs-built_in">data</span> <span class="hljs-subst">=</span> raw <span class="hljs-subst">?</span> raw : {};
<span class="hljs-built_in">data</span> <span class="hljs-subst">=</span> raw<span class="hljs-built_in">.</span><span class="hljs-built_in">data</span> <span class="hljs-subst">?</span> JSON<span class="hljs-built_in">.</span>parse(raw<span class="hljs-built_in">.</span><span class="hljs-built_in">data</span>) : <span class="hljs-built_in">data</span>;</code></pre><h2>2.2 Parsing POST</h2>


<pre class="hljs"><code><span class="hljs-keyword">if</span> (req.method == <span class="hljs-string">&#39;POST&#39;</span>) {
   <span class="hljs-keyword">var</span> fullBody = <span class="hljs-string">&#39;&#39;</span>;
   req.on(<span class="hljs-string">&#39;data&#39;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(chunk)</span> </span>{
   <span class="hljs-comment">// append the current chunk of data to the fullBody variable</span>
   fullBody += chunk.toString();
   });
   req.on(<span class="hljs-string">&#39;end&#39;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
      <span class="hljs-comment">// parse the received body data</span>
      <span class="hljs-keyword">var</span> decodedBody = querystring.parse(fullBody);
      <span class="hljs-built_in">console</span>.log(decodedBody);
   }
}</code></pre><p><h1>3. Concurrency</h1></p>
<h2>3.1 Waiting for async stuff to complete before continuing</h2>

<p>E.g. when you need to have all the results from the database before you do something.</p>
<pre class="hljs"><code><span class="hljs-keyword">var</span> wait = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(callbacks, done)</span> </span>{
   <span class="hljs-keyword">var</span> counter = callbacks.length;
   <span class="hljs-keyword">var</span> next = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
      <span class="hljs-keyword">if</span>(--counter == <span class="hljs-number">0</span>) {
         done();
      }
   };
   <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; callbacks.length; i++) {
      callbacks<a href="next">i</a>;
   }
}</code></pre><p>Example usage (if you prefer, imagine that these are three database calls and that you are storing the results in some higher-scope variable in each of them and then using that result in function d):</p>
<pre class="hljs"><code><span class="hljs-keyword">var</span> a = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(next)</span> </span>{
   setTimeout( <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Done A&quot;</span>);
      next();
   }, <span class="hljs-number">3000</span>);
  };

<span class="hljs-keyword">var</span> b = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(next)</span> </span>{
   setTimeout( <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Done B&quot;</span>);
      next();
   }, <span class="hljs-number">2000</span>);
  };

<span class="hljs-keyword">var</span> c = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(next)</span> </span>{
   setTimeout( <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Done C&quot;</span>);
      next();
   }, <span class="hljs-number">1000</span>);
  };

<span class="hljs-keyword">var</span> d = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{
   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;All done!&quot;</span>);
  };

wait([a, b, c], d );</code></pre><p>Similar libraries include: Tim Caswell&#39;s <a href="https://github.com/creationix/step">Step </a>and Will Conant&#39;s <a href="https://github.com/willconant/flow-js">Flow</a>.exec(). This code is simpler so it doesn&#39;t use <code>this</code> to pass the function next(); but rather passes it explicitly. Also it needs an array, instead of accepting an arbitrary number of function arguments. The library functions do better error handling and have more features, so you might want to use them / look at them to improve the code.</p>
<h2>3.2 Limiting concurrency</h2>

<p>E.g. reading a gazillion files but just running 30 reads at a time not to exhaust the available file handles. You have a list of operations to do, you want to do them all but can&#39;t start/don&#39;t want to have more than max_concurrency number of the operations running simultaneously.</p>
<p>I call this the Pile, but there probably is a better name for it. Put your stuff in the pile, and then run it all, finally call done() when everything is done. Main difference with simple completion counters like Wait() above is that this code limits concurrent execution, which is necessary in some cases (e.g. reading files).</p>
<pre class="hljs"><code><span class="hljs-keyword">var</span> Pile = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
   <span class="hljs-keyword">this</span>.pile = [];
   <span class="hljs-keyword">this</span>.concurrency = <span class="hljs-number">0</span>;
   <span class="hljs-keyword">this</span>.done = <span class="hljs-literal">null</span>;
   <span class="hljs-keyword">this</span>.max_concurrency = <span class="hljs-number">10</span>;
}
Pile.prototype = {
  add: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(callback)</span> </span>{
   <span class="hljs-keyword">this</span>.pile.push(<span class="hljs-keyword">callback</span>);
  },
  run: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(done, max_concurrency)</span> </span>{
      <span class="hljs-keyword">this</span>.done = done || <span class="hljs-keyword">this</span>.done;
      <span class="hljs-keyword">this</span>.max_concurrency = max_concurrency || <span class="hljs-keyword">this</span>.max_concurrency;
      <span class="hljs-keyword">var</span> target = <span class="hljs-keyword">this</span>.pile.length;
      <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span>;
      <span class="hljs-keyword">var</span> next = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
         that.concurrency--;
         (--target == <span class="hljs-number">0</span> ? that.done() : that.run());
      };
      <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.concurrency &amp;lt; <span class="hljs-keyword">this</span>.max_concurrency &amp;amp;&amp;amp; <span class="hljs-keyword">this</span>.pile.length &amp;gt; <span class="hljs-number">0</span>) {
         <span class="hljs-keyword">this</span>.concurrency++;
         <span class="hljs-keyword">var</span> <span class="hljs-keyword">callback</span> = <span class="hljs-keyword">this</span>.pile.shift();
         <span class="hljs-keyword">callback</span>(next);
      }
   }
};</code></pre><p>Example usage (add 20 functions, then run em at concurrency of 5 at a time). Again, imagine that setTimeout an async I/O call.</p>
<p><strong>Note:</strong> you have to call next() when you&#39;re done.</p>
<pre class="hljs"><code>pilex = <span class="hljs-keyword">new</span> Pile();

<span class="hljs-keyword">var</span> counter = <span class="hljs-number">0</span>;

<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &amp;lt; <span class="hljs-number">20</span>; i++) {
   pilex.add( <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span><span class="hljs-params">(next)</span> </span>{
      <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime();
      setTimeout( <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{
         counter++;
         <span class="hljs-built_in">console</span>.log(counter +<span class="hljs-string">&quot; Hello world&quot;</span>);
         next();
      }, <span class="hljs-number">5000</span>);
     }
   );
}
pilex.run(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Done &quot;</span>+counter);}, <span class="hljs-number">5</span>);</code></pre><h2>3.3 Pooling and reusing expensive, persistent resources</h2>
I recommend using <a href="https://github.com/coopernurse/node-pool">node-pool</a>, since the management code is rather involved if you want to timeout/renew objects in the pool.
<h2>3.4 Running arbitrary workflows when dependencies are matched</h2>
If you can split your overall task into several independent async workflows, then <a href="https://github.com/creationix/conductor">Conductor </a>seems like a nice solution since it does dependency resolving for you.
<h2>4. More good basic node.js patterns/snippets?</h2>

<h2 id="comments">Comments</h2>
<p><strong><a href="#433" title="2011-07-13 04:52:00">windyrobin</a>:</strong> very good,it&#39;s really very helpful!</p>
<p><strong><a href="#434" title="2011-08-02 21:17:32">John Hurliman</a>:</strong> Thanks a bunch for this handy reference. By the way, the technical term for your Pile concept is a semaphore.</p>
<p><strong><a href="#435" title="2011-08-16 09:36:20">zenek</a>:</strong> hi, I try to do what u remind in point 1.1, but i cant
function a() {
}
a.prototype = {
z :1
}</p>
<p>var a1Obj = new a();
var a2Obj = new a();
a2.z = 2;
console.log(a1.z) // 1
console.log(a2.z) // 2</p>
<p>this is not like static. Please help me :D</p>
<p><strong><a href="#436" title="2011-08-17 21:48:30">Mikito Takada</a>:</strong> Its &quot;like static&quot; - not exactly the same.</p>
<p>If you assign a value to obj.something, and have a value in obj.prototype.something, then the value in obj.something will take precedence.</p>
<p>So this works:
function A() {}
A.prototype = { z: 1 };
var aa = new A();
var ab = new A();
console.log(aa.z); // 1
console.log(ab.z); // 1
A.prototype.z = 100; // EXPLICITLY assign to prototype property
console.log(aa.z); // 100
console.log(ab.z); // 100</p>
<p>but if you do:
aa.z = 123;
console.log(aa.z); // 123 (from object property z)
console.log(ab.z); // 100 (from object prototype property z)</p>
<p>For a lot more details, see <a href="http://dmitrysoshnikov.com/ecmascript/chapter-7-2-oop-ecmascript-implementation/">http://dmitrysoshnikov.com/ecmascript/chapter-7-2-oop-ecmascript-implementation/</a></p>
<p><strong><a href="#437" title="2011-11-29 17:20:22">ik</a>:</strong> Thanks, really useful for those studying node.</p>
<p><strong><a href="#438" title="2011-12-01 00:58:23">Rob Baltzer</a>:</strong> This stuff is great.  I <em>think</em> there is a type on 2.2. Should be:</p>
<p>if (req.method == &#39;POST&#39;) {
   var fullBody = &#39;&#39;;
   req.on(&#39;data&#39;, function(chunk) {
   // append the current chunk of data to the fullBody variable
   fullBody += chunk.toString();
   });
   req.on(&#39;end&#39;, function() {
      // parse the received body data
      var decodedBody = querystring.parse(fullBody);
      console.log(decodedBody);
   });
}</p>
<p><strong><a href="#439" title="2012-01-14 22:53:03">zaphod1984</a>:</strong> great resource, thanks a lot!</p>
<p><strong><a href="#440" title="2012-02-13 16:15:32">trantor</a>:</strong> Should there be a &#39;var&#39; in front of Common = {...} in 1.4?
Or will the Common object become a global?
Thanks for yours tutorial!</p>
<p><strong><a href="#441" title="2012-02-14 04:42:28">Mikito Takada</a>:</strong> Thanks for noticing - fixed it above. Also, have a look at my book for a more up to date and complete discussion of Node patterns, at <a href="http://book.mixu.net/">http://book.mixu.net/</a></p>
<p><strong><a href="#442" title="2012-02-15 19:44:27">rich</a>:</strong> Is your Wait example above really synchronous (or meant to be).</p>
<p>It seems to just run all the functions and the timeout is what is really just firing.</p>
<p>So you aren&#39;t getting what I&#39;d expect which was:</p>
<p>A runs to completion, then calls next (ie B), B runs, then C. so the output should be:</p>
<p>Done A, Done B, Done C</p>
<p>What is happening is</p>
<p>Done C, Done B, Done A no matter what order is in:</p>
<p>wait([A,B,C], D);</p>
<p>same results with wait([C,A,B], D), etc,etc
Thanks,</p>
<p>Rich</p>
<p><strong><a href="#443" title="2012-02-16 08:54:33">Mikito Takada</a>:</strong> Yeah, all the tasks are started at the same time and run in parallel - and then the last function triggers.</p>
<p>setTimeout is the actual task you want to run. In real code, you would substitute setTimeout() with another async function call, like fs.readFile(&#39;./foo.txt&#39;, function() { next() });</p>
<p>I guess the function should be called done() and not next().</p>
<p>Have a look at <a href="http://book.mixu.net/ch7.html">http://book.mixu.net/ch7.html</a> for the updated, longer explanation.</p>
<p><strong><a href="#444" title="2012-02-23 00:49:41">ekanna</a>:</strong> Hi,</p>
<p>Is it necessary to use constructor functions in NodeJs?</p>
<p>Why can&#39;t we just write simple functions and assign them to exports object for reuse in other modules?</p>
<p>I believe constructor functions main purpose is code reuse. when that is achieved by assigning simple functions to exports object in NodeJS, why do we need constructor functions?</p>
<p>I am new to programming itself! Your book is really excellent.</p>
<p>Thanks
ekanna</p>
<p><strong><a href="#446" title="2012-03-10 22:16:08">Marc</a>:</strong> Hi,</p>
<p>your patterns have been very useful for me. But I&#39;ve been missing a Pattern for a Module with an EventEmitter. So here I created one: <a href="https://gist.github.com/2012929">https://gist.github.com/2012929</a></p>
<p>Greets Marc</p>
<p><strong><a href="#448" title="2012-05-07 02:17:56">Quest</a>:</strong> Invaluable compilation of snippets. I&#39;d been looking for a good recent object example all morning.</p>
<p>The only thing that&#39;s missing is a good example of Node object inheritance (older examples use sys.inherits, but it looks like it&#39;s been moved to util.inherits).</p>
<p><strong><a href="#449" title="2012-06-04 15:23:44">wiill</a>:</strong> Regarding your Class pattern, and your article on Node Fundamentals (ch 9.2 EventEmitters), it&#39;s problematic to define class methods in a single prototype hash definition, as in following:</p>
<p>class.prototype = {...}</p>
<p>As it will overwrite all previous / defaults for the prototype, especially when calling:</p>
<p>util.inherits(class, EventEmitter) (I wrote a comment as well on this chapter)</p>
<p>I would then recommend to define methods using your second pattern:</p>
<p>class.prototype.methodName = function(args){...}</p>
<p>(Thanks for correcting me if anything wrong, quite new in JS so I may missing some fundamentals : )</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Wed, 02 Feb 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Understanding the node.js event loop]]></title><description><![CDATA[<p>The first basic thesis of node.js is that I/O is expensive:</p>
<p>﻿<a href="http://blog.mixu.net/files/2011/01/io-cost.png"><img class="alignnone size-full wp-image-1661" title="io-cost" src="http://blog.mixu.net/files/2011/01/io-cost.png" alt="" width="509" height="362" /></a></p>
<p>So the largest waste with current programming technologies comes from waiting for I/O to complete.  There are several ways in which one can deal with the performance impact (from <a href="http://www.nightmare.com/medusa/async_sockets.html">Sam Rushing</a>):</p>
<ul>
    <li><strong>synchronous</strong>: you handle one request at a time, each in turn. <em>pros</em>: simple <em>cons</em>: any one request can hold up all the other requests</li>
    <li><strong>fork a new process</strong>: you start a new process to handle each request. <em>pros</em>: easy <em>cons</em>: does not scale well, hundreds of connections means hundreds of processes. fork() is the Unix programmer&#39;s hammer. Because it&#39;s available, every problem looks like a nail. It&#39;s usually overkill</li>
    <li><strong>threads</strong>: start a new thread to handle each request. <em>pros</em>: easy, and kinder to the kernel than using fork, since threads usually have much less overhead <em>cons</em>: your machine may not have threads, and threaded programming can get very complicated very fast, with worries about controlling access to shared resources.</li>
</ul>

<p>The second basis thesis is that thread-per-connection is memory-expensive:  [e.g. that graph everyone showns about Apache sucking up memory compared to Nginx]</p>
<p>Apache is multithreaded: it spawns a <a href="http://httpd.apache.org/docs/2.0/mod/worker.html">thread per request</a> (or <a href="http://httpd.apache.org/docs/2.0/mod/prefork.html">process</a>, it depends on the conf). You can see how that overhead eats up memory as the number of concurrent connections increases and more threads are needed to serve multiple simulataneous clients.  Nginx and Node.js are not multithreaded, because threads and processes carry a heavy memory cost. They are single-threaded, but event-based. This eliminates the overhead created by thousands of threads/processes by handling many connections in a single thread.</p>
<h2><strong>Node.js keeps a single thread for your code...</strong></h2>
It really is a single thread running: you can&#39;t do any parallel code execution; doing a &quot;sleep&quot; for example will block the server for one second:

<code>js
while(new Date().getTime() &amp;lt; now + 1000) {
   // do nothing
}</code>

So while that code is running, node.js will not respond to any other requests from clients, since it only has one thread for executing your code. Or if you would have some CPU -intensive code, say, for resizing images, that would still block all other requests.

<h2><strong>...however, everything runs in parallel <span style="text-decoration: underline;">except your code</span></strong></h2>

<p>There is no way of making code run in parallel within a single request. However, all I/O is evented and asynchronous, so the following won&#39;t block the server:  [codesyntax lang=&quot;javascript&quot;]</p>
<pre class="hljs"><code> c.query(
   <span class="hljs-string">&#39;SELECT SLEEP(20);&#39;</span>,
   <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(err, results, fields)</span> <span class="hljs-comment">{
     if (err) {
       throw err;
     }</span>
     <span class="hljs-title">res</span>.<span class="hljs-title">writeHead</span><span class="hljs-params">(200, {<span class="hljs-string">&#39;Content-Type&#39;</span>: <span class="hljs-string">&#39;text/html&#39;</span>})</span>;</span>
     res.<span class="hljs-keyword">end</span>(<span class="hljs-string">&#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Hello&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Return from async DB query&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;</span>);
     c.<span class="hljs-keyword">end</span>();
    }
);</code></pre><p>If you do that in one request, other requests can be processed just fine while the database is running it&#39;s sleep.</p>
<p><h2>Why is this good? When do we go from sync to async/parallel execution?</h2>
Having synchronous execution is good, because it simplifies writing code (compared to threads, where concurrency issues have a tendency to result in WTFs).</p>
<p>In node.js, you aren&#39;t supposed to worry about what happens in the backend: just use callbacks when you are doing I/O; and you are guaranteed that your code is never interrupted and that doing I/O will not block other requests without having to incur the costs of thread/process per request (e.g. memory overhead in Apache).</p>
<p>Having asynchronous I/O is good, because I/O is more expensive than most code and we should be doing something better than just waiting for I/O.</p>
<p><a href="http://blog.mixu.net/files/2011/01/bucket_3.gif"><img class="alignnone size-full wp-image-1663" title="bucket_3" src="http://blog.mixu.net/files/2011/01/bucket_3.gif" alt="" width="378" height="226" /></a></p>
<p>An event loop is &quot;an entity that handles and processes external events and converts them into callback invocations&quot;. So I/O calls are the points at which Node.js can switch from one request to another. At an I/O call, your code saves the callback and returns control to the node.js runtime environment. The callback will be called later when the data actually is available.</p>
<p>Of course, on the backend, there are <a href="http://stackoverflow.com/questions/3629784/how-is-node-js-inherently-faster-when-it-still-relies-on-threads-internally">threads and processes for DB access and process execution</a>. However, these are not explicitly exposed to your code, so you can&#39;t worry about them other than by knowing that I/O interactions e.g. with the database, or with other processes will be asynchronous from the perspective of each request since the results from those threads are returned via the event loop to your code. Compared to the Apache model, there are a lot less threads and thread overhead, since threads aren&#39;t needed for each connection; just when you absolutely positively must have something else running in parallel and even then the management is handled by Node.js.</p>
<p>Other than I/O calls, Node.js expects that all requests return quickly; e.g. <a href="http://stackoverflow.com/questions/3491811/node-js-and-cpu-intensive-requests">CPU-intensive work should be split off to another process</a> with which you can interact as with events, or by using an abstraction like <a href="http://blog.std.in/2010/07/08/nodejs-webworker-design/">WebWorkers</a>. This (obviously) means that you can&#39;t parallelize your code without another thread in the background with which you interact via events. Basically, all objects which emit events (e.g. are instances of EventEmitter) support asynchronous evented interaction and you can interact with blocking code in this manner e.g. using files, sockets or child processes all of which are EventEmitters in Node.js. <a href="http://developer.yahoo.com/blogs/ydn/posts/2010/07/multicore_http_server_with_nodejs/">Multicore can be done</a> using this approach; see also: node-http-proxy.</p>
<p><strong>Internal implementation</strong></p>
<p><a href="https://github.com/ry/node/tree/master/deps">Internally</a>, node.js relies on <a href="http://software.schmorp.de/pkg/libev.html">libev</a> to provide the event loop, which is supplemented by <a href="http://software.schmorp.de/pkg/libeio.html">libeio</a> which uses pooled threads to provide asynchronous I/O. To learn even more,  have a look at the <a href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod">libev documentation</a>.</p>
<p><h2>So how do we do async in Node.js?</h2>
Tim Caswell describes the patterns in his <a href="http://creationix.com/jsconf.pdf">excellent presentation</a>:</p>
<p><ul>
    <li>First-class functions. E.g. we pass around functions as data, shuffle them around and execute them when needed.</li>
    <li>Function composition. Also known as having anonymous functions or closures that are executed after something happens in the evented I/O.</li></p>
<h2 id="comments">Comments</h2>
<p><strong><a href="#462" title="2011-02-07 19:54:15">Quora</a>:</strong> <strong>What server do I need to handle 1000+ users simultaneously?...</strong></p>
<p>If you want to handle a lot of real-time users, then your best choice is to go with an event-based, or non-blocking driven server. Taking this route will keep slow, wasteful, and unresponsive operations from killing performance, requiring that you crea...</p>
<p><strong><a href="#466" title="2011-03-08 16:27:52">chrelad</a>:</strong> Thanks for writing up this nice intro to the node.js event loop.</p>
<p><strong><a href="#467" title="2011-04-28 03:02:18">Adrian</a>:</strong> Very good description of the event loop. I still have a ton more to learn but this got me on the right path.  Node is insane!</p>
<p><strong><a href="#471" title="2011-07-11 06:34:49">Matt Freeman</a>:</strong> [quote]
The queries will run in parallel provided that the I/O library supports this (e.g. via connection pooling).
[/quote]</p>
<p>What has db connection pooling got to do with parallel query execution???</p>
<p><strong><a href="#472" title="2011-07-11 06:49:38">Mikito Takada</a>:</strong> Well, it really depends on the case you&#39;re thinking about, but what I&#39;m trying to say is that the underlying limitations of the I/O library determine the manner in which stuff gets executed. If you only have a single  connection to the DB such as MySQL, then you&#39;d only be able to launch one query at a time.</p>
<p>E.g. &quot;The MySQL Client-Server Protocol has no build-in support for asynchronous query execution. The state transition is always SEND - RECEIVE. After sending a query you always have to fetch its result in the very next step.&quot; (<a href="http://blog.ulf-wendel.de/?p=170">http://blog.ulf-wendel.de/?p=170</a>)</p>
<p>You can probably find counterexamples to this, however - notably the Node core modules.</p>
<p><strong><a href="#473" title="2011-08-01 22:56:56">Willy Wiggler</a>:</strong> I don&#39;t get this at all - you claim that node.js is better because it doesn&#39;t spawn off a bunch of threads and/or processes to deal with synchronous processing, but then you claim that the node runtime spawns off threads &amp; processes for DB access, etc...</p>
<p>I&#39;m very skeptical that node.js would scale better than a more traditional thread-per-request model.  The reality is that the node runtime will have to have some number of threads running to do the async IO.  I fail to see how this is beneficial over having a thread pool to consume incoming requests.</p>
<p>I&#39;d love to see some benchmarks that compare node.js implementations against other stacks.</p>
<p><strong><a href="#474" title="2011-08-02 09:54:18">Mikito Takada</a>:</strong> Well, Node is not a silver bullet  - but the thread-per-request model is pretty heavy due to overhead from processes.</p>
<p>And while some parts of Node will still use threads, it&#39;s not one process for each request but rather based the actual work you need to do. Also, Node defaults to using asynchronous APIs where available (which is pretty much in all the core APIs now). See <a href="http://blog.zorinaq.com/?e=34">http://blog.zorinaq.com/?e=34</a></p>
<p>Take epoll, for example, which offers async filesystem I/O and is the secret sauce behind Nginx and libev on Linux.</p>
<p>Here is an illustration of the overhead with epoll (nginx) vs. non-epoll (Apache).</p>
<p><a href="http://blog.webfaction.com/a-little-holiday-present">http://blog.webfaction.com/a-little-holiday-present</a></p>
<p>Tons of other benchmarks via Google, take them all with a grain of salt!</p>
<p><strong><a href="#480" title="2011-10-22 19:12:34">Shawn Adrian</a>:</strong> Great intro to this, answered some of my questions. I&#39;d love to see some basic code examples added to illustrate your points though, would help a bunch! Thanks for writing.</p>
<p><strong><a href="#482" title="2011-12-21 07:33:41">Jared</a>:</strong> This was a great article, thanks for taking the time to illustrate the brilliance behind &quot;event loop&quot; based systems. The one thing I wish people would point out is there is still a way to use node.js to handle heavy computation. While programing for the client side we all realized that setTimeout could be used on heavy a loop statement to maintain responsiveness. e.g.</p>
<p>instead of:
for (var x = 0 ; x &lt; 40000000; x++){
   //do something crazy.
}</p>
<p>var later = function(x, callback){
    if (x&lt;40000000){
        //do something crazy.
        later(x+1, callback);
    } else {callback();}
};</p>
<p>later(0, function(){alert(&quot;done&quot;);});</p>
<p>So lets not be scared to do something computationally expensive. Lets just be smart with how we write it. On the client side we learned that, so why is it so hard to learn it for the server side.</p>
<p>I really enjoyed your article. Thanks</p>
<p><strong><a href="#484" title="2012-01-01 18:29:14">Battur</a>:</strong> In your example code you did not use setTimeout to maintain responsiveness. Recursively calling your later function many times does not bring anything good in terms of responsiveness. On top of that each invocation of later function will create a number of new objects related to new execution context, which will eat the memory quickly until it calls the passed in callback function and gets garbage collected.</p>
<p><strong><a href="#485" title="2012-01-01 22:09:54">Mikito Takada</a>:</strong> Agreed - you&#39;ll run out of stack space.</p>
<p>I&#39;d say that when the task is &quot;do something computationally intensive fast&quot; on the server side, the answer is <em>not</em> &quot;let&#39;s use a coding trick that makes the runtime slightly more responsive&quot; e.g. setTimeout or process.nextTick().</p>
<p>Node is fast for a dynamic language, but the event loop is not intended to make computationally intensive tasks responsive, it&#39;s meant to cut the resource waste related to waiting for I/O. If you saturate CPU, the solution is to find a more efficient algorithm, add caching and/or distribute the work as background tasks over several boxes.</p>
<p><strong><a href="#487" title="2012-01-17 17:14:29">Beo</a>:</strong> Thanks for this explanation, you made it very clear.</p>
<p><strong><a href="#488" title="2012-01-23 16:34:44">Punit Pandey</a>:</strong> Best explanation of Node.js benefits so far. Well done.</p>
<p><strong><a href="#489" title="2012-01-27 16:06:51">Jeff</a>:</strong> Where did you get your I/O metrics at the beginning of the article? I&#39;d like to reference them in an upcoming presentation if you don&#39;t mind. Thanks!</p>
<p><strong><a href="#490" title="2012-01-30 22:08:52">Aaron Hardy</a>:</strong> Very well-written.  Thank you.</p>
<p><strong><a href="#492" title="2012-02-14 04:07:36">Darío</a>:</strong> Thank you very much for your article, it&#39;s just brilliant!
By the way, loved your phrase &quot;When I read what I write I learn what I think&quot;!!
Cheers</p>
<p><strong><a href="#493" title="2012-02-14 07:51:48">C2D</a>:</strong> amazing post. Thank you.</p>
<p><strong><a href="#494" title="2012-02-17 21:23:35">Vijiay Rawat</a>:</strong> Very well written. Helped me a lot.</p>
<p><strong><a href="#496" title="2012-02-23 08:58:55">cantbecool</a>:</strong> Thanks for the introduction to Node&#39;s event loop.</p>
<p><strong><a href="#500" title="2012-03-06 22:23:09">D</a>:</strong> What confuses me about node.js is that I don&#39;t get what you really gain going from threads to async calls. In the end, you only have one CPU and only one process or thread can run code through it at a time. Of course you could have multi cores but threads can take advantage of that just as well as multiple processes. So what are you gaining?</p>
<p>And yes, multi-threaded issues like race conditions are a nightmare, but it&#39;s not valid to just say &quot;use multiple separate processes instead&quot;. Race conditions occur because your code <em>has</em> to have data shared across all threads. That&#39;s not something specific to threading, it&#39;s specific to the application you&#39;re writing. If you have shared data under multiple processes, you will have to implement inter-process communication, which is all a nightmare in its own right, and doesn&#39;t alleviate race conditions anyway.</p>
<p>And thirdly, if you only have one database running on a single box, how is this going to save you any time? Sure the web server will hand off the requests to the database server or file system very quickly but the database server has to serialize those requests to the disk to retrieve the data (ignoring caching that might occur at the database level). So you really, you are only as parallelizable as your database server or file system. Of course, that&#39;s the case with threads as well, but again, the point is that I don&#39;t see what asynch non-blocking IO gets you over threads.</p>
<p><strong><a href="#501" title="2012-03-06 23:59:30">Mikito Takada</a>:</strong> It&#39;s definitely not a silver bullet, but I find that with Node&#39;s evented async model, you get to write something that works quickly on a single process; since there is only one thread of execution, you gain simplicity. When it comes time to scale you skip thinking about scaling to multiple cores on a single machine and go directly to thinking about scaling to multiple machines. It&#39;s less efficient since instead of IPC you use sockets or an external service like Redis for a single machine, but I feel like the ability to scale by adding machines is more important. In my view, Node is about taking a simple idea (single-process event loops), and seeing how far one can go with it.</p>
<p><strong><a href="#502" title="2012-03-10 02:17:10">Mathias</a>:</strong> I&#39;m having  bit of trouble understanding this. Would node.js we useable for a blog were you have say 500 visitors a day? Or does the visitors have to wait in line to make requests and get a response.</p>
<p>Or another example: Would node.js work good for a proxy server doing api request? Can the server send a request, then continuing with 10 other requests, Right after the 5th request has started it gets a response for the first request, returns that to the user asking for it, then continuing with the 6th and so on?</p>
<p>Is this relevant at all?
Just trying to understand.</p>
<p><strong><a href="#503" title="2012-03-10 02:18:30">Mathias</a>:</strong> Got my email wrong, wheres the edit button?</p>
<p><strong><a href="#505" title="2012-03-21 08:08:16">Ed</a>:</strong> Some of this may be misleading to folks, although its a great article. There is an assumption in the blog that &quot;everything else runs in parallel.&quot; And that is simply not true. Libeio and libev, are themselve event loops which use epoll or some other AIO system to block until IO is ready.</p>
<p>I think the main issue is that folks get confused about IO. But IO  - to Node - is anything that involves a system call for IO: sockets, disk, etc. This is not database queries such as MySQL or anything else requiring user-mode processing.  IO is typically not CPU bound...  so this model works well.</p>
<p>You will see some threads if you run node in gdb, but just a couple. I am now running on node 0.7 and my understanding is there will be a worker thread pool eventually...</p>
<p>Mathias asks a question above... Yes, it could be used by 100k people a day, so long as you process stuff fast - otherwise you will need to go spawn your own thread using some native module. This is why <em>node</em> despite the hype, does not really scale well for CPU-bound work, but scales very well for IO-bound. Node does <em>not</em> take advantage of multi-core &amp; multi-cpu boxes well. But, there is nothing wrong with running a few node&#39;s at once on a box (given you figure out all the port redirect, etc)</p>
<p><a href="http://www.quora.com/How-does-IO-concurrency-work-in-node-js-despite-the-whole-app-running-in-a-single-thread">http://www.quora.com/How-does-IO-concurrency-work-in-node-js-despite-the-whole-app-running-in-a-single-thread</a></p>
<p><strong><a href="#506" title="2012-03-24 06:36:38">Dan</a>:</strong> Except modern webservers are not thread-per-request, many use threadpools. Usually, you have about 2x as many threads in your worker pool as cores. There is a acceptor thread that accepts incoming connections, and dispatches the request to threads in the worker pool. If there is a request that might take a bit of time to process, it doesn&#39;t prevent the other worker threads, or acceptor thread from doing their jobs. This architecture allows for utilizing all the available cores, without spawning tons of threads.</p>
<p>Seriously, Apache is slow. Tomcat as of 4-5 years ago, a JVM based server, was beating it on many benchmarks.</p>
<p><strong><a href="#507" title="2012-03-30 22:31:46">Michael Keisu</a>:</strong> Thank you so much, this cleared up so much of my confusion.</p>
<p><strong><a href="#512" title="2012-04-12 05:52:01">Jayesh Mori</a>:</strong> This is really helping. I am new to Node.JS and this helped understand what is going on behind the scene.</p>
<p><strong><a href="#513" title="2012-04-19 10:04:29">Ed</a>:</strong> Replying to another Ed...</p>
<p><strong><a href="#514" title="2012-04-19 10:52:19">Ed</a>:</strong> apologies...</p>
<p>Ed,</p>
<p>Call a spade for what it is.  node.js is anticipation of having more devs deploying code onto the cloud in a shorter fashion.</p>
<p>What would come about when everyone realized that libraries used to get access to these slow I/O services relied upon threads?  Would they spawn threads or processes to support it?</p>
<p>I&#39;m going to start hacking on a threaded version of node.js</p>
<p>cheers,</p>
<p>ed</p>
<p><strong><a href="#516" title="2012-05-15 10:54:07">Jorge</a>:</strong> For the &quot;everything runs in parallel except your code&quot; problem, there&#39;s the threads_a_gogo solution:</p>
<p><strong><a href="#517" title="2012-05-15 10:54:58">Jorge</a>:</strong> <a href="https://github.com/xk/node-threads-a-gogo">https://github.com/xk/node-threads-a-gogo</a></p>
<p><strong><a href="#526" title="2012-06-26 10:03:16">Alex</a>:</strong> What about INSERT DELAYED? That is non blocking</p>
<p><strong><a href="#612" title="2013-01-24 18:13:12">pligg.com</a>:</strong> <strong>Understanding the node.js event loop...</strong></p>
<p>So the largest waste with current programming technologies comes from waiting for I/O to complete. There are several ways in which one can deal with the performance impact......</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Tue, 01 Feb 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Performance benchmarking the node.js backend of our 48h product, WeHearVoices.net]]></title><description><![CDATA[<p>I decided to spend some time looking into improving the performance of the node.js backend of our 48h hackathon product <a href="http://wehearvoices.net/">We Hear Voices</a> - a dead-simple but slick feedback tool for websites and web apps (go get it for your site ;).</p>
<p>Anyway, I didn&#39;t do any performance optimization during <a href="http://www.garage48.org/events/helsinki-2011">Garage48</a> since we were adding functionality rather than worrying about performance; but as you can see at the end of this post the backend is now optimized for much greater performance.</p>
<p>Here are my initial benchmarks, node.js vs Django:</p>
<p><a href="http://blog.mixu.net/files/2011/01/initial-out.png"><img class="alignnone size-full wp-image-1623" title="initial-out" src="http://blog.mixu.net/files/2011/01/initial-out.png" alt="" width="640" height="480" /></a></p>
<p>The unoptimized implementation for the backend is hitting the database on every request and creating new MySQL client connections on each load; it does not use any caching. Given this, the performance fo node is almost 190 requests per slower than Django:</p>
<p>Node.js requests per second:    275.41 [#/sec] (mean)</p>
<p>Python (front page of site) requests per second:    454.49 [#/sec] (mean)</p>
<p>I decided to tackle the client connections first by implementing MySQL client pooling. Instead of creating new MySQL connections, the server uses a pool of 10 MySQL connections to perform queries.</p>
<p><a href="http://blog.mixu.net/files/2011/01/pool-out.png"><img class="alignnone size-full wp-image-1626" title="pool-out" src="http://blog.mixu.net/files/2011/01/pool-out.png" alt="" width="640" height="480" /></a></p>
<p>The resulting performance takes Node.js to a similar level of performance as Django. Note that those queries are still there, loaded each time and we have only eliminated the latency from connecting to MySQL.</p>
<p>Node.js requests per second:    417.23 [#/sec] (mean)</p>
<p>Next, I implemented caching for questions, with a cache lifetime of 30 minutes:</p>
<p><a href="http://blog.mixu.net/files/2011/01/cache1-out.png"><img class="alignnone size-full wp-image-1627" title="cache1-out" src="http://blog.mixu.net/files/2011/01/cache1-out.png" alt="" width="640" height="480" /></a></p>
<p>Now node.js is twice as fast as Django. Note that in this naive caching, the result is not expired immediately if the user changes the questions. For that, we need to expose a way for the frontend to tell the backend that the user updated the question - which is rather simple to implement (later).</p>
<p>Node.js requests per second:    848.21 [#/sec] (mean)</p>
<p>I added some more improvements:</p>
<p><a href="http://blog.mixu.net/files/2011/01/cache2-out.png"><img class="alignnone size-full wp-image-1629" title="cache2-out" src="http://blog.mixu.net/files/2011/01/cache2-out.png" alt="" width="640" height="480" /></a></p>
<p>This improves the performance by a further 300 requests per second. There is some degradation at the very slowest requests, but most requests are faster (98% complete in less than 192 ms). I still need to look into the performance degradation, although the requests per second tended to remain rather constant even when I tested it with 20 000 requests at concurrency of 1000 simultaneous requests.</p>
<p>Node.js requests per second:    1135.72 [#/sec] (mean)</p>
<p>Then I refactored the code a bit more, and added request-level caching (which runs the minimum amount of logic while taking into account the necessity of getting and setting per-user cookies and per-referrer questions).</p>
<p><a href="http://blog.mixu.net/files/2011/01/final-x.png"><img class="alignnone size-full wp-image-1638" title="final-x" src="http://blog.mixu.net/files/2011/01/final-x.png" alt="" width="640" height="480" /></a></p>
<p>Node.js requests per second:    1879.86 [#/sec] (mean)</p>
<p>Time per request:       53.196 [ms] (mean)</p>
<p>Time per request:       0.532 [ms] (mean, across all concurrent requests)</p>
<p>The very lowest curve, nodejs-hello-world is the performance of a node.js server which simply returns Hello World. We aren&#39;t quite at that level since we need to some routing and cookie setting/getting.</p>
<p>There are a few special cases where performance is somewhere between nodejs-p-cache-2 (notably if you have two identical URLs mapped to different questions) and nodejs-p-final; but even those get cached after a couple of questions.</p>
<p>However, I am satisfied that any of our early users will get good performance out of the service. Testing the most recent code with 1000 concurrent users gives similar performance (50-60 ms) with a couple of outliers which take longer.</p>
<p><strong>What this means that even if you send us a <em>continuous </em>stream of traffic where 1800 users load a page each second, we can still cope with it :)</strong> (with some caveats, so maybe 1200+ requests per second would be more appropriate)<strong>.</strong> I think the next problem is to get that traffic...</p>
<script src="http://static.wehearvoices.net/widget.js" type="text/javascript"></script>
 <script src="http://widget.wehearvoices.net/node/init.js?user_id=1757eb62-218b-11e0-9884-fefdb24f91c5" type="text/javascript"></script>

<h2 id="comments">Comments</h2>
<p><strong><a href="#423" title="2011-01-31 23:38:57">Ryan Dahl</a>:</strong> What version of Node is this? What mysql library are you using and which version of it?</p>
<p><strong><a href="#424" title="2011-01-31 23:55:27">Mikito Takada</a>:</strong> Node v.0.3.4 with felixge&#39;s node-mysql v0.9.0 on a Linode 512.</p>
<p>And if I may, let me do my best impression of a fan girl: OMG OMG OMG! It&#39;s Ryan Dahl! You&#39;re you! Huge fan.</p>
<p><strong><a href="#425" title="2011-10-15 21:19:58">Anthony Webb</a>:</strong> What did you use for a connection pool with mysql?  Also interested in how you were doing the caching.</p>
<p><strong><a href="#426" title="2011-11-04 08:27:18">David</a>:</strong> What are you running Django on?  If you&#39;re just running the built in Django server I would absolutely expect it to be slower...  The built in server is purely for development and mostly unoptimized given that Django is a framework and not a server.  If you were running Django under nginx or maybe something like gunicorn you may find it runs significantly faster, assuming you were running the django dev server.  Incidentally, that would actually make it a fair test as django makes no claims that its built in server is production capable, stating quite the opposite in the docs.</p>
<p><strong><a href="#427" title="2012-01-11 18:17:16">Bart Czernicki</a>:</strong> Stupid question...but the graph(s) you show are highly skewed...can&#39;t u also implement caching and pooling in Django?? (rhetorical question).</p>
<p>It would have been nice to see those performance improvements applied to BOTH frameworks/products.  Its like me saying .NET is better than Java because I can do async programming/Generics/use advanced data structures etc. (examples both languages have).</p>
<p><strong><a href="#428" title="2012-01-12 12:57:51">Mikito Takada</a>:</strong> To put this in context: Node was a lot newer a year ago and the point of the article was just to see what kind of performance we could get out of Node with a few optimizations. The Django curve is there just to provide some context; it was running behind nginx if my memory serves me right.</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Mon, 17 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Attending Garage48 Helsinki 2011, my experience]]></title><description><![CDATA[<p>I just came back from <a href="http://www.garage48.org/events/helsinki-2011">Garage48</a>, a 48 hour hackathon organized by <a href="http://aaltoes.com/">Aalto Entrepreneurship Society</a> and <a href="http://www.garage48.org/org-team">Garage48</a> in Helsinki. I had a ton of fun, met some interesting new people and built something awesome!</p>
<p>Our team, <a href="http://wehearvoices.net/">WeHearVoices</a>, built a dead-simple but slick feedback tool for websites and web apps. Go have a look and register if you want a simpler, cheaper tool for collecting feedback from your users. The admin UI is based on an inbox with starred items; the integration only requires that you add two lines to your page. We&#39;ll decide on the next steps based on the feedback we get - so let us know if you want this product and do register/write your email so we can get back to you.</p>
<p>Update (day after Garage48): Some <a href="http://blog.mixu.net/2011/01/17/performance-benchmarking-the-node-js-backend-of-our-48h-product-wehearvoices-net/">performance benchmarks for the WeHearVoices backend</a> after I spent some time optimizing it.</p>
<p>It was a great experience! I loved being able to wrap up and ship a product that I would want to use in just two hectic days; closing a couple of sites as customers of the product during the hackathon was the cherry on top.</p>
<p>The great thing about our team was that we all shared a vision for a product that got its value from being simple - that made it possible to just do two meetings during whole thing (initiation and refinement) and we worked really well together despite having different skills and responsibilities.</p>
<p>I learned a lot more about building stuff with <a href="http://redmonk.com/sogrady/2010/05/13/node-js/">Node.js</a>; got exposure to Django and Ubuntu server (if you follow this blog you&#39;ll know that I started Node.js during Christmas and do my server stuff on Centos) and learned about the way in which other people do web product work. Thank you Jens, Jori and Jukka! And thank you  <a href="http://www.garage48.org/">Garage48 </a>and <a href="http://aaltoes.com">AaltoES</a>!</p>
<p>You can find the list of startups at the end of this post. And here are some random notes that I want to remember for the next hackathon:</p>
<p><h2>For thinking about ideas:</h2></p>
<ul>
    <li><em>Big-and-visionary vs. small-and-shipped.</em><strong> </strong>The bigger your idea, the less likely that you&#39;ll get it shipped. We went with the small-and-shipped, which I think was liked by many entrepreneurs, but projects are evaluated based on both their ambition and their ability to execute on that ambition. If you want to be judged favorably, the sweet spot is probably somewhere in between the two ends with emphasis on working on the business, not the tech. For me though - with my unlimited supply of projects to do - shipping is an epic win.</li>
    <li><em>Size isn&#39;t just about scope, it is also about expectations. </em>Think about the  expectations you create, since those determine how people judge your outcome. I think <a href="http://bookstrapp.com/">Bookstrap</a> got too much flak from the judges since they weren&#39;t convinced that it was possible to build good-enough accounting software over a hackathon.</li>
    <li><em>Judging is probably based on the interests of the sponsors</em> (e.g. promoting their platform) - know their tech and you&#39;ll be more eligible to win.</li>
    <li><em>Unusual is interesting. </em>Standing out from all the other products is likely to make you an audience favorite if you can execute (that&#39;s a big if). <a href="http://montroller.com/">Montroller </a>did a great job with this!</li>
</ul>
<h2>For future productivity as a developer:</h2>
<ul>
    <li><em>Get your server set up in advance</em>; target the big-3 if you can (Ruby, Python, PHP). While setting up a server is insignificant on a long-term project, it does eat some time which could be spent better. We had two servers bought but there was still some setup work which took a couple of hours. I&#39;d like to have that done in advance next time.</li>
    <li><em>Have an automated way of doing deployment which uses a DCVS as frontend.</em> We had a deploy script which was based on Python, which was mostly fine. However, since two (out of four) on our team didn&#39;t know Python and didn&#39;t have it set up on our computers, we ended up having the Python devs use the script while others only used Mercurial. If we had hosted the repositories directly on the server, and just pushed data directly to it (rather than via BitBucket) then we could have probably saved some troubles. Ideally, a push should trigger a standardized set of deployment actions which would be maintained on the server rather than a client-side deployment script, since it reduces the amount of stuff that people need to learn. I&#39;ll have to think about that, since I&#39;ve written quite a bit about <a href="http://blog.mixu.net/2010/10/04/setting-up-private-ssh-based-mercurial-repo-hosting-on-centos/">deploying</a> and <a href="http://blog.mixu.net/2010/10/04/setting-up-private-ssh-based-mercurial-repo-hosting-on-centos/">repo hosting using Mercurial</a>.</li>
    <li><em>Learn both git and hg.</em> Since it seems that Windows supports hg well but does OSX rather poorly, while git supports OSX well but isn&#39;t quite as smooth on Windows (both are awesome on Linux). Hence people tend to know one or the other; if you know the basics of both, it&#39;ll be easier to get started. It&#39;s also a good idea to keep the cheat sheets and recommended configurations for the chosen DCVS somewhere so that people who need to switch can have get their environment set up quickly (e.g. username settings, diff tools). I still need to play around more with branching, since I am the only coder on my current projects and haven&#39;t yet tried out the variations.</li>
    <li><em>For high productivity, use a shared technology/shared language to connect dev tasks.</em> I wished I had known more about Django, since we used it for the adminstrative user interface and I probably could have helped more. Everybody knows Javascript, CSS, HTML and database schemas, so those provide a useful way to share work done with others. If you don&#39;t have the time, at least learn the frontend stuff (e.g. templating) since that allows you to contribute more. We ended up specializing so that the backend was written in Node.js, the frontend via Django and the widget design using jQuery; it worked here but I wonder about the next hackathon.</li>
    <li><em>Have people who can dedicate time to think about particular aspects of the product;</em> even if in theory you can do frontend or marketing, it&#39;ll be hard to keep switching between roles. Our solution to this was not to worry about marketing at all during the 48hrs - but that wouldn&#39;t work for all projects and we realized later that we ought to at least have had an about-us page.</li>
    <li><em>Worry about the iteration you are starting now, not the next one</em><strong>.</strong> It&#39;s a tech thing to start thinking too far ahead, since we don&#39;t usually do sprints (e.g. 48h excluding sleep time) but marathons (months+). We did this right in our team: there was very little time during wasted on thinking about pie-in-the-sky architectures.</li>
</ul>
<h2><strong>Want to be popular at the next event as a developer?</strong></h2>
<ul>
    <li><em>Do real-time technology</em>; everything social benefits from having someone who can do <a href="http://en.wikipedia.org/wiki/Comet_(programming)">Comet </a>well. I had a lot of possibilities thanks to this!</li>
    <li><em>Learn mobile development</em>. Location sensing and various alternative user interaction methods are pop. Doing cross-platform well in particular is impressive.</li>
    <li><em>Release your boilerplate code as open source</em>. <a href="http://blog.mixu.net/2010/09/14/kohana-3-auth-sample-implementation-and-documentation/">I did this</a>, though we didn&#39;t get use the code since we had different tech backgrounds.</li>
    <li>More good tips <a href="http://techsurvival.blogspot.com/2009/02/lessons-from-startup-weekend-seattle-2.html">here</a>.</li>
</ul>

<h2 id="comments">Comments</h2>
<p><strong><a href="#418" title="2011-01-17 18:19:57">Smola</a>:</strong> Mixu,</p>
<p>Really nice recap and thanks for the feedback!</p>
<p>@smola_</p>
<p><strong><a href="#419" title="2011-01-17 23:08:59">Miki</a>:</strong> Thanks for the post, very good to hear how you liked the event as a developer!</p>
<p><strong><a href="#420" title="2011-01-18 01:25:14">Ramine Darabiha</a>:</strong> Great blog post.</p>
<p>Regarding Bookstrap, it was in my top 3. I think the guys have done an amazing job, and Timo has progressed a lot as a speaker.</p>
<p><strong><a href="#421" title="2011-01-18 09:34:16">Santeri</a>:</strong> Nice blog post.</p>
<p>WeHearVoices was easily my favorite product to come out of Garage48, I hope you keep pushing it onwards!</p>
<p>-Santeri</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Mon, 17 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Getting started with Useradmin, my Kohana 3 auth admin module]]></title><description><![CDATA[<p>In this post, I discuss the details of how to use my admin module. Hopefully this covers all the stuff you need to know; if not, let me know in the comments. I&#39;m just one guy, so it may be quicker to ask on the Kohana forums for troubleshooting. Previous writing:</p>
<p><ol>
    <li><a href="http://blog.mixu.net/2010/09/06/step-by-step-guide-to-kohana-3-auth/">Setting up the basic Auth in KO3</a> (part 1)</li>
    <li><a href="http://blog.mixu.net/2010/09/07/kohana-3-auth-the-auth-module-functionality/">An overview of the functionality provided by the Auth module</a> (part 2)</li>
    <li><a href="http://blog.mixu.net/2010/09/14/kohana-3-auth-sample-implementation-and-documentation/">Kohana 3 auth: sample implementation and documentation</a> (part 3)</li>
    <li>Getting started with Useradmin, my Kohana 3 auth admin module (part 4; this part)</li>
</ol></p>
<p><h3>KO3.1 support is DONE, updating this tutorial to match that now. See part 3 above for changelog.</h3></p>
<p><h3><span style="font-size: 20px;">1. Installation</span></h3>
<strong>Changes from 3.x version of the module to 3.1.x compatible version</strong></p>
<p>The useradmin module is no longer offered as a &quot;single application&quot; with Kohana bundled in the same repository. Instead, only the content of the /modules/user directory is now in the repository. This makes it easier to work with the repository in Github.</p>
<p><ul>
    <li>You should copy the module to your /modules -directory.</li>
    <li>You need to have the kohana-email module for sending forgotten password emails for now, if you want to use that feature.</li>
    <li>Kohana 3.1 no longer bundles the pagination module which is used in the admin interface. You have to<a href="https://github.com/kohana/pagination"> get that module </a>and enable it.</li>
</ul>
<strong>Database schema</strong></p>
<p>Import the MySQL schema from /schema.sql. It will create a &quot;useradmin&quot; database. You might want to rename that when you start; in that case you need to change /application/config/database.php.</p>
<p><span style="text-decoration: underline;"><em>Watch this space! </em></span>Right now, the database schema&#39;s passwords do not work out of the box. I&#39;m working on making a script to generate a secure starting SQL file for you... For now, use Auth::instance()-&gt;hash(&#39;password&#39;) and then reset the admin password via your MySQL admin tool.</p>
<p><strong>Module load order</strong></p>
<p>Make sure that Useradmin is loaded before Auth in your bootstrap.php, because otherwise Kohana will not load the correct Model_User (it&#39;ll use the one in Auth, not the one in Useradmin). Example with the minimum required modules:</p>
<pre class="hljs"><code>Kohana<span class="hljs-tag">::modules</span>(<span class="hljs-built_in">array</span>(
   <span class="hljs-string">&#39;user&#39;</span>       <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;user&#39;</span></span>,       <span class="hljs-comment">// Useradmin module</span>
   <span class="hljs-string">&#39;auth&#39;</span>       <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;auth&#39;</span></span>,       <span class="hljs-comment">// Basic authentication</span>
   <span class="hljs-string">&#39;database&#39;</span>   <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;database&#39;</span></span>,   <span class="hljs-comment">// Database access</span>
   <span class="hljs-string">&#39;orm&#39;</span>        <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;orm&#39;</span></span>,        <span class="hljs-comment">// Object Relationship Mapping</span>
   <span class="hljs-string">&#39;pagination&#39;</span>        <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;pagination&#39;</span></span>,        <span class="hljs-comment">// Pagination</span>
   <span class="hljs-string">&#39;oauth&#39;</span>        <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.<span class="hljs-variable">&#39;oauth&#39;</span></span>,        <span class="hljs-comment">// Kohana-Oauth for Twitter</span>
   <span class="hljs-string">&#39;kohana-email&#39;</span>        <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; MODPATH<span class="hljs-built_in">.</span><span class="hljs-string">&#39;kohana-email&#39;</span>,        <span class="hljs-comment">// Kohana-Email for email</span>
   ));</code></pre><p>The required modules are user, auth, database, ORM, Pagination. Optional modules: Oauth (for Twitter) and kohana-email (for email sending support).</p>
<p><strong>Writable directories</strong></p>
<p>Make sure the /application/logs and /application/cache directories exist and are writable by your server (you&#39;ll get an error if they aren&#39;t).</p>
<p><strong>Copying the static files for performance </strong></p>
<p>The useradmin module now includes a simple media serving capability so that you can get started by just including the module.</p>
<p>However, since it is not a good idea for performance to load CSS and image files via Kohana, you should copy the /public folder to wherever you put your webroot. This way Apache will load it directly (since direct file accesses are preferred in the Kohana default htaccess file).</p>
<p><strong>KO3.1 Auth configuration</strong></p>
<p>In Kohana 3.1, the default hash method is now sha256 instead of sha1. This means that there is no salt_pattern; and that old KO 3.x passwords are not compatible with KO 3.1! See <a href="http://dev.kohanaframework.org/issues/3163">the discussion on this bug for more information</a>. TL;DR: the salt pattern is weak, so if someone steals your database but does not know your salt_key, they can deduce it easily and perform a dictionary attack.</p>
<p>Instead, you need to configure your hash_key which gets passed to <a href="http://php.net/manual/en/function.hash-hmac.php">http://php.net/manual/en/function.hash-hmac.php</a>. You can also use any of the hast_hmac() supported algorithms if you want to.</p>
<p>Use a random hash_key, for example from: <a href="https://www.grc.com/passwords.htm">https://www.grc.com/passwords.htm</a></p>
<p>return array</p>
<pre class="hljs"><code>(
    <span class="hljs-string">&#39;driver&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-string">&#39;ORM&#39;</span>,
    <span class="hljs-string">&#39;hash_method&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-string">&#39;sha256&#39;</span>,
    <span class="hljs-string">&#39;hash_key&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-built_in">NULL</span>, <span class="hljs-comment">// replace with random string</span>
    <span class="hljs-string">&#39;lifetime&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-number">1209600</span>,
    <span class="hljs-string">&#39;session_key&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-string">&#39;auth_user&#39;</span>,
    <span class="hljs-string">&#39;users&#39;</span> <span class="hljs-subst">=&amp;</span><span class="hljs-literal">gt</span>; <span class="hljs-built_in">array</span>(),
);</code></pre><p><strong>Migrating from KO3.x</strong></p>
<p><span style="text-decoration: underline;"><em>Watch this space!</em></span> I&#39;m working on a better migration path than throwing out the old password database...</p>
<p>Important: Note that the password column should be CHAR(64) for sha256.</p>
<p><span style="font-size: 20px; font-weight: bold;">2. Useradmin configuration</span></p>
<p>By default, reCaptcha support and Facebook logins are disabled, but password reset via email is enabled.</p>
<p><strong>Facebook login</strong></p>
<p>To enable Facebook login, set the &quot;facebook&quot; option to true in config/useradmin.php. Then you need to copy /modules/user/config/facebook.php as /application/config/facebook.php and set app_id and secret to the values you got from Facebook. You need to <a href="http://developers.facebook.com/setup/">register your site/app here</a> to get those values. That&#39;s really all it takes; you can then start accepting Facebook logins.</p>
<p>For more info about how Facebook logins work, see my <a href="http://blog.mixu.net/2010/12/27/implementing-facebook-login-single-sign-on-part-1/">series on implementing Facebook login</a>. No additional database changes are needed if you are using my schema.sql; otherwise you need to add one extra field to your User table (<code>facebook_user_id</code> BIGINT( 20 )).</p>
<p><strong>ReCaptcha on registration</strong></p>
<p>To enable a ReCaptcha check on registration, set the &quot;captcha&quot; option to true in config/useradmin.php. Then you need to copy /modules/user/config/recaptcha.php as /application/config/recaptcha.php and set privatekey and publickey to the values you get from reCaptcha. <a href="https://www.google.com/recaptcha/admin/create">Register for reCaptcha here</a>.</p>
<p><strong>Disabling password reset via email, Facebook login or ReCaptcha on registration</strong></p>
<p>If you want to disable Facebook logins, or disable the password reset via email functionality, then copy /modules/user/config/useradmin.php to /application/config/ and set either &quot;facebook&quot; or &quot;email&quot; to  false. You can also change the address from which the password reset emails are sent in that file.</p>
<p><h2>3. Customization</h2>
<strong>Creating your own controllers which extend Controller_App</strong></p>
<p>All the controllers in Useradmin inherit from Controller_App in /modules/user/classes/controller/app.php.</p>
<p>You&#39;ll want you own controllers to also inherit from it, since Controller_App defines a before() action which performs the auth checks.</p>
<p>In addition, Controller_App provides support for template rendering: it defaults to using ﻿/modules/user/views/template/default.php. If you want to override that template, you&#39;ll want to copy the default.php file to /application/views/template/default.php and modify it.</p>
<p>The Controller classes for Useradmin default to using /modules/user/views/template/useradmin.php. This means that you can have one UI template for Useradmin, and another for the rest of your application.  Alternatively you can integrate the two by adding links to your own template.</p>
<p><strong>Naming your controllers</strong></p>
<h2 id="comments">Comments</h2>
<p><strong><a href="#303" title="2011-01-24 19:41:54">Sam</a>:</strong> Not sure why I&#39;m getting the following error when I try to use facebook login....</p>
<p>Kohana_Exception [ 0 ]: Invalid method generate_password called in Model_User</p>
<p>Any help would be greatly appreciated.  Thanks!</p>
<p><strong><a href="#304" title="2011-01-24 21:45:57">Mikito Takada</a>:</strong> My quick guess is: in bootstrap.php, are you loading the Useradmin module before the Auth module?</p>
<p>You need to load the Useradmin (a.k.a. User) module before Auth so that Kohana uses the Model_User in Useradmin which has generate_password, rather than the one from Auth, which doesn&#39;t.</p>
<p>Damnit! I forgot that from this page though it was discussed in the previous blog post comments. Page updated!</p>
<p>BTW, let me know if you get everything working (including Facebook) with this guide; I&#39;ve tested this myself but I may have glossed over some details since I wrote the module.</p>
<p><strong><a href="#305" title="2011-01-24 22:13:37">Sam</a>:</strong> Awesome!  That&#39;s exactly what it was.  I activated the useradmin module right after the auth module in the bootstrap file.  Thanks for your quick response!  It would of taken me hours to figure that out.  =)  Also, how do you disable the profile data?</p>
<p><strong><a href="#306" title="2011-01-25 02:33:57">Mikito Takada</a>:</strong> What do you mean by disabling the profile data? If you mean disabling the profile editing, you can do that by creating your own Controller_User in application/classes/controller/user.php (extends Controller_Useradmin_User) and overriding the action_profile_edit function with a simple redirect back to the profile page / to the change password action. The change password action (action_change_password) is there for applications that don&#39;t want to use user profiles but still want to have a page to change the password only.</p>
<p><strong><a href="#307" title="2011-01-25 03:56:41">Sam</a>:</strong> Sorry, I should of explained myself better.  I meant to say the profiling information on the bottom of the page for execution time, database queries, etc etc.  Thanks!</p>
<p><strong><a href="#308" title="2011-01-25 19:28:59">Mikito Takada</a>:</strong> To remove the profiling information, just remove the code that prints the profiler view from the template you are using (e.g. module/user/view/template/useradmin.php or template/default.php; you can copy them to your app/views/ directory to override them).</p>
<p><strong><a href="#309" title="2011-01-26 15:35:39">Sam</a>:</strong> Awesome, Thanks!</p>
<p><strong><a href="#310" title="2011-01-27 00:26:36">Davey</a>:</strong> Really awesome module!</p>
<p>Quick question, I want to achieve this:</p>
<p>website.com/backoffice/user/register</p>
<p>As you can see I want &#39;backoffice&#39; in front of the controller name, how can I achieve this?</p>
<p><strong><a href="#311" title="2011-01-27 23:24:36">Mikito Takada</a>:</strong> See: <a href="http://kohanaframework.org/guide/kohana/routing">http://kohanaframework.org/guide/kohana/routing</a> and <a href="http://kerkness.ca/wiki/doku.php?id=routing:building_routes_with_subdirectories">http://kerkness.ca/wiki/doku.php?id=routing:building_routes_with_subdirectories</a></p>
<p>Probably something like:</p>
<p>Route::set(&#39;backoffice/user&#39;, &#39;user/(&lt;action&gt;(/&lt;id&gt;))&#39;)
    -&gt;defaults(array(
        &#39;controller&#39; =&gt; &#39;user&#39;,
        &#39;action&#39;     =&gt; &#39;index&#39;,
        &#39;id&#39;       =&gt; NULL,
    ));</p>
<p>I haven&#39;t tried this out.</p>
<p><strong><a href="#312" title="2011-02-04 20:04:18">Sam</a>:</strong> Hi Mikito,</p>
<p>It&#39;s me again...  I installed your code and everything was working fine last week but now the facebook login button no longer works.  I can&#39;t even click it.  Any idea?  (<a href="http://app.babynamemo.com">http://app.babynamemo.com</a>).  Thanks in advance!</p>
<p><strong><a href="#313" title="2011-02-04 21:21:52">Mikito Takada</a>:</strong> Tried it out with my test account, signup via Facebook works for me on your site. If you haven&#39;t changed the code for the post-login logic, then the problem is with your browser...</p>
<p>If you find a specific, reproducible problem and are sure that the problem is with my module then file a bug in Github (&quot;no longer works&quot; is not a bug since it&#39;s not specific or reproducible). Even better, fork the code and send me a pull request with a fix.</p>
<p>While I appreciate people using my code, I don&#39;t do individual support/debugging :) -- except via blogging/tutorials/occasional comments which is much more efficient than personalized support... I think it&#39;s better for me to use any free time on improving the code further rather than providing support.</p>
<p><strong><a href="#314" title="2011-02-04 21:43:21">Sam</a>:</strong> Thanks Mikito!  I totally understand.  I just find it strange that it suddenly stopped working for me.  Thanks so much for looking into this for me.  I will file any bug in Github next time if I find anything.  =)</p>
<p><strong><a href="#315" title="2011-02-10 01:40:38">ellisgl</a>:</strong> Thanks for developing this. I do have a couple questions:</p>
<ol>
<li>Since 3.1.0 is out now, are you planning on updating the code to match?</li>
<li>It would be nice to have the session driver set via the config file.</li>
</ol>
<p><strong><a href="#316" title="2011-02-10 09:31:51">Mikito Takada</a>:</strong> 1) Yes, but I&#39;m swamped with work right now, so an upgrade to 3.1.0 will be coming in a couple of weeks unless someone else wants to do it... The problem is that I have no paid Kohana projects right now, so work on Useradmin comes out of my free time budget.
2) I&#39;ll add that to the wishlist.</p>
<p><strong><a href="#317" title="2011-02-24 12:16:46">Jam</a>:</strong> +1 for being able to use the native session driver, also adding the ability to set the $remember switch in the Auth ORM _login method would be awesome too.</p>
<p><strong><a href="#318" title="2011-02-25 01:11:42">Enrique</a>:</strong> Hi, how can I download your code? I can&#39;t find the link...
Thanks!</p>
<p><strong><a href="#319" title="2011-02-25 01:16:02">Mikito Takada</a>:</strong> <a href="http://blog.mixu.net/2010/09/14/kohana-3-auth-sample-implementation-and-documentation/">http://blog.mixu.net/2010/09/14/kohana-3-auth-sample-implementation-and-documentation/</a></p>
<p><strong><a href="#320" title="2011-02-25 06:24:37">Sam M</a>:</strong> Thanks for developing this great resource.</p>
<p>Although I believe I found an error in the most recent version of useradmin I downloaded. When attempting to log in without the correct login or password (or just nothing at all). I would get an error in &quot;MODPATH/user/classes/controller/useradmin/user.php&quot; on line 289.  It was:</p>
<p>ErrorException [ Fatal Error ]: Call to a member function errors() on a non-object</p>
<p>This line:</p>
<p>$view-&gt;set(&#39;errors&#39;, $status-&gt;errors(&#39;login&#39;));</p>
<p>I replaced $status with $_REQUEST and the problem seemed to be fixed.</p>
<p><strong><a href="#321" title="2011-02-25 12:53:52">greg</a>:</strong> Hey, I found it very useful but I have one problem. I am getting an error (if the login or password is wrong) when I am trying to login:</p>
<p>ErrorException [ Fatal Error ]: Call to a member function errors() on a non-object
MODPATHuserclassescontrolleruseradminuser.php [ 289 ]
284             if ($status) {
285                // redirect to the user account
286                Request::instance()-&gt;redirect(&#39;user/profile&#39;);
287             } else {
288                // Get errors for display in view
289                $view-&gt;set(&#39;errors&#39;, $status-&gt;errors(&#39;login&#39;));
290             }
291          }
292          $view-&gt;set(&#39;facebook_enabled&#39;, Kohana::config(&#39;useradmin&#39;)-&gt;facebook);
293          $this-&gt;template-&gt;content = $view;
294       }</p>
<p>Any idea what&#39;s wrong?</p>
<p>Thanks in advance.</p>
<p><strong><a href="#322" title="2011-02-25 13:09:14">Mikito Takada</a>:</strong> Yeah, see Sam M&#39;s comment above (it was stuck in moderation queue for a while). The fix will be built-in in the next release (which comes with awesome UI and Twitter+Google+Yahoo support).</p>
<p><strong><a href="#323" title="2011-02-25 14:44:02">greg</a>:</strong> Sorry, I didn&#39;t notice the post above when I was typing. I am bit distracted today.</p>
<p>Sam&#39;s solution works like a charm. I just replaced the:</p>
<p>$status-&gt;errors(‘login’)</p>
<p>with:</p>
<p>$_REQUEST-&gt;errors(‘login’)</p>
<p>One more thing. If I won&#39;t be using $_GET method can I replace the $_REQUEST with the $_POST? It should work fine also, right?</p>
<p>About next release - awesome dude! When are you going to release it? Anytime soon? It will be working on kohana 3.0 or 3.1?</p>
<p>Great job!</p>
<p><strong><a href="#324" title="2011-02-27 23:19:33">Mikito Takada</a>:</strong> The new release is out NOW!</p>
<p>It&#39;s still Kohana 3.0.x based, but there will eventually be support for Kohana 3.1.x - when I have more time...</p>
<p>(Edit: KO 3.1.x is now supported.)</p>
<p><strong><a href="#325" title="2011-03-09 05:06:59">neovive</a>:</strong> Just wanted to say thank you for all of the great tutorials and modules on your blog.</p>
<p><strong><a href="#326" title="2011-03-24 15:06:48">Seb</a>:</strong> Hey, awesome module - seriously good stuff! Will be adding the facebook/twitter image grab functions for you and will email you the code once done.</p>
<p>Just quickly tho, I&#39;m getting the error&quot;Retrieving information from the provider failed. Please register below.&quot; when trying to login via facebook, any suggestions?</p>
<p>Facebook privacy settings are good, everything installed as per your instructions (i think)...</p>
<p><strong><a href="#327" title="2011-03-24 15:30:22">Mikito Takada</a>:</strong> Great! The error &quot;Retrieving information from the provider...&quot; is usually caused by having an invalid API key so that the result from Facebook cannot be verifies properly.</p>
<p>Check your config/facebook.php and try printing out $_REQUEST before calling       if($provider-&gt;verify()) { in useradmin / classes / controller / useradmin / user.php to get the returned values..</p>
<p>Also, you might want to try to throw the exception from useradmin / classes / provider / facebook.php verify() to get more information...</p>
<p><strong><a href="#328" title="2011-03-28 00:15:11">Zoran Ivancevic</a>:</strong> Hi,
is there any way I can use this module with Doctrine instead of the default ORM?
I guess I could use the ORM just for you plugin, and Doctrine for everything else, but that could be really messy.</p>
<p><strong><a href="#329" title="2011-03-31 12:17:27">Cieply</a>:</strong> When i&#39;m trying to create new account get this error:
ErrorException [ Fatal Error ]: Call to undefined method Auth_File::register()</p>
<p>MODPATH/user/classes/controller/useradmin/user.php [ 179 ]</p>
<p>Kohana 3.1.2</p>
<p><strong><a href="#330" title="2011-03-31 18:51:47">Mikito Takada</a>:</strong> Sorry, Useradmin is tested/meant to be used with Auth_ORM (e.g. you need to use ORM and the ORM Auth driver).</p>
<p>The Auth_File driver is not supported by Useradmin, the recent code updates improved the level of abstraction but I don&#39;t use Auth_File so I don&#39;t test with it. You need to port the Auth_ORM extensions to Auth_File yourself or use the ORM driver.</p>
<p><strong><a href="#331" title="2011-03-31 19:39:14">Zoran Ivancevic</a>:</strong> I managed to get your module running with doctrine.
Twitter, google and yahoo work fine, but with Facebook I&#39;m having the same problem as Seb: &quot;Retrieving information from the provider failed. Please register below.&quot;</p>
<p>It is failing in the vendor file, function getSession(). Session seems always to be NULL. It is in the $_REQUEST.</p>
<p>My api key is fine. I checked a few times.</p>
<p>Any suggestions?</p>
<p><strong><a href="#332" title="2011-03-31 20:04:31">Mikito Takada</a>:</strong> Hi Zoran, awesome! I have been looking into using Doctrine if I do a big project with Kohana.</p>
<p>About the problem: you mean this file?</p>
<p><a href="https://github.com/mixu/useradmin/blob/master/vendor/facebook/src/facebook.php">https://github.com/mixu/useradmin/blob/master/vendor/facebook/src/facebook.php</a></p>
<p>Then the problem is with Facebook&#39;s own PHP SDK.</p>
<p>If you are on Windows, then you might have problems with curl having old certificates (there is a loooong thread on this on the Facebook SDK PHP: <a href="https://github.com/facebook/php-sdk/issues/7">https://github.com/facebook/php-sdk/issues/7</a> ). Generally my impression is that Facebook&#39;s own library seems to have a lot of issues and the documentation is rather confusing.</p>
<p>See also: <a href="https://github.com/facebook/php-sdk/issues">https://github.com/facebook/php-sdk/issues</a></p>
<p>Useradmin only does a lightweight wrapper (<a href="https://github.com/mixu/useradmin/blob/master/classes/provider/facebook.php">https://github.com/mixu/useradmin/blob/master/classes/provider/facebook.php</a> ) around the Facebook PHP SDK - so if you have the rest of the module working, then the problem is with Facebook&#39;s own library...</p>
<p><strong><a href="#333" title="2011-03-31 20:16:21">Zoran Ivancevic</a>:</strong> Yes, that file.
In fuction getSession()</p>
<p>// try loading session from $_REQUEST
      if (!$session &amp;&amp; isset($_REQUEST[&#39;session&#39;])) {
        $session = json_decode(
          get_magic_quotes_gpc()
            ? stripslashes($_REQUEST[&#39;session&#39;])
            : $_REQUEST[&#39;session&#39;],
          true
        );
        print_r($_REQUEST[&#39;session&#39;]); //bugtrace
        print_r($session); //bugtrace
        $session = $this-&gt;validateSessionObject($session);
      }</p>
<p>first print_r outputs b63a1f2864504778eb2e7b6fc0b8bfed
second print_r outputs nothing</p>
<p><strong><a href="#334" title="2011-03-31 20:32:02">Zoran Ivancevic</a>:</strong> Maybe the return from facebook is not set up right.
Can you just tell me what should I put in facebook dev under site URL:
<a href="http://mysite.com/">http://mysite.com/</a>
<a href="http://mysite.com/user/">http://mysite.com/user/</a>
<a href="http://mysite.com/user/provider/">http://mysite.com/user/provider/</a>
<a href="http://mysite.com/user/provider_return/">http://mysite.com/user/provider_return/</a>
?</p>
<p><strong><a href="#335" title="2011-03-31 20:56:19">Mikito Takada</a>:</strong> The return URL should be:</p>
<p><a href="http://mysite.com/user/provider_return/facebook">http://mysite.com/user/provider_return/facebook</a></p>
<p><strong><a href="#336" title="2011-04-04 14:04:54">Harry</a>:</strong> Hello, Mikito!</p>
<p>Thank you for the enormous effort you&#39;ve put in the module.</p>
<p>I have a problem when I try to register a user:</p>
<p>Call to undefined method Auth_File::register()</p>
<p> in line 179 in</p>
<p>MODPATHuserclassescontrolleruseradminuser.php</p>
<p>The line says:</p>
<p>Auth::instance()-&gt;register( $_POST, TRUE );</p>
<p>And after browsing through all of the classess declarations I found that the instance method should return an object of the class Auth_ORM (or from a class which extends Auth_ORM). But instead of that it returns an object from Auth_File class which doesn&#39;t have register method of course.</p>
<p>The problem obviously is happening in the instance method in modules/classes/kohana/auth.php :</p>
<pre class="hljs"><code><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">instance</span><span class="hljs-params">()</span>
</span>{
    <span class="hljs-keyword">if</span> ( ! <span class="hljs-keyword">isset</span>(Auth::<span class="hljs-variable">$<em>instance</span>))
    {
        <span class="hljs-comment">// Load the configuration for this type</span>
        <span class="hljs-variable">$config</span> = Kohana::config(<span class="hljs-string">&#39;auth&#39;</span>);

        <span class="hljs-keyword">if</span> ( ! <span class="hljs-variable">$type</span> = <span class="hljs-variable">$config</span>-&amp;gt;get(<span class="hljs-string">&#39;driver&#39;</span>))
        {
            <span class="hljs-variable">$type</span> = <span class="hljs-string">&#39;file&#39;</span>;
        }

        <span class="hljs-comment">// Set the session class name</span>
        <span class="hljs-variable">$class</span> = <span class="hljs-string">&#39;Auth</em>&#39;</span>.ucfirst(<span class="hljs-variable">$type</span>);

        <span class="hljs-comment">// Create a new session instance</span>
        Auth::<span class="hljs-variable">$_instance</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$class</span>(<span class="hljs-variable">$config</span>);
    }

    <span class="hljs-keyword">return</span> Auth::<span class="hljs-variable">$_instance</span>;
}</code></pre><p>I&#39;ve thought I have a problem with the configuration in bootstrap.php, but it&#39;s the same as provided in the tutorial.</p>
<p>Could you please help me?</p>
<p><strong><a href="#337" title="2011-04-04 18:27:59">Andres</a>:</strong> Hi Mikito, I only can say: &quot;Good Job, man!&quot;. Thanks!</p>
<p>Useradmin works right, so taking a look to your schema.sql I can see that user_identity table has not a foreign key to users.id, no matter with this, but it&#39;s my little improvement :)</p>
<p>I&#39;m from Argentina and I&#39;m using i18n for internationalization (using my own es-ar translation... yes, I used your i18n auto-collector script!) but, reading your code, I can see that you forgotten some function &quot;__&quot; calls. I added this in my code, I would share my code with you soon.</p>
<p>Thanks again for sharing you code with us!</p>
<p><strong><a href="#338" title="2011-04-04 18:48:05">Mikito Takada</a>:</strong> Yeah, as the code you quote says if you don&#39;t configure the driver for the KO 3.1 core Auth, it will use the Auth_File driver, which is NOT supported  by Useradmin (at least not yet; it&#39;s just an early start for doing that abstraction but not sure that I will implement it). Make sure you have configured auth like in the section &quot;KO3.1 Auth configuration&quot; above.</p>
<p>Please use the ORM driver in /application/config/auth.php...</p>
<p><strong><a href="#339" title="2011-04-04 18:51:38">Mikito Takada</a>:</strong> Thanks Andres,  this comment made my day after feeling pretty tired! I probably missed some __ calls in the last upgrade, send me the code to firstname.surname at gmail.com (e.g. zipped). I&#39;ll do a merge next time I work on Useradmin.</p>
<p><strong><a href="#340" title="2011-04-05 04:37:34">Andres</a>:</strong> Hi Mikito, thanks for your reply!
I&#39;m testing all Useradmin features, but when Useradmin tries to send a mail (e.g. when I clicked in the forgot password link), I received a Error: ErrorException [ Fatal Error ]: Class &#39;Email&#39; not found
I added the Shadowhand email module for Kohana 3.x and the old banks kohana-email module, both with the same result.</p>
<p>In my application bootstrap, I have:</p>
<p>Kohana::modules(array(
    &#39;user&#39;        =&gt; MODPATH.&#39;user&#39;,     // Useradmin module
    &#39;auth&#39;        =&gt; MODPATH.&#39;auth&#39;,     // Basic authentication
    // &#39;cache&#39;      =&gt; MODPATH.&#39;cache&#39;,      // Caching with multiple backends
    // &#39;codebench&#39;  =&gt; MODPATH.&#39;codebench&#39;,  // Benchmarking tool
    &#39;database&#39;    =&gt; MODPATH.&#39;database&#39;,   // Database access
    // &#39;image&#39;      =&gt; MODPATH.&#39;image&#39;,      // Image manipulation
    &#39;orm&#39;            =&gt; MODPATH.&#39;orm&#39;,        // Object Relationship Mapping
    &#39;email&#39;     =&gt; MODPATH.&#39;email&#39;,      // Email module
    &#39;pagination&#39;    =&gt; MODPATH.&#39;pagination&#39;, // Pagination module
    // &#39;unittest&#39;   =&gt; MODPATH.&#39;unittest&#39;,   // Unit testing
    // &#39;userguide&#39;  =&gt; MODPATH.&#39;userguide&#39;,  // User guide and API documentation
    ));</p>
<p>Do you know why the system can&#39;t load the Email class?</p>
<p><strong><a href="#341" title="2011-04-05 20:12:01">Steve</a>:</strong> Thanks man, this saved me a lot of time and works fantastically so far.  The only issue I found was a call to Security::xss_clean() in the login function that didn&#39;t exist anymore, but I just changed it to HTML::chars to escape it instead and everything works great.  I&#39;ll let you know if I&#39;m able to implement any of your wish list features in the future.</p>
<p><strong><a href="#342" title="2011-04-14 01:15:11">Brent</a>:</strong> Hi, I am trying to set up the module but when trying to update my database with your schema in fails on any CREATE TABLE that includes foreign key constraints with error:
Error Code: 1005
Can&#39;t create table &#39;user_tokens&#39; (errno: 150)</p>
<p>Mysql docs suggest that a column name may match an internal table name. <a href="http://dev.mysql.com/doc/refman/5.0/en/innodb-error-codes.html">http://dev.mysql.com/doc/refman/5.0/en/innodb-error-codes.html</a></p>
<p>Any ideas anyone?</p>
<p><strong><a href="#343" title="2011-04-16 22:39:29">Jan Daniel</a>:</strong> Hello, maybe you should use HTML::.. methods with last attribute TRUE - without it module styling and links will not work on application which doesnt use clean URLs.</p>
<p>I am pretty new to Kohana and takes me a while to solve where is a problem.</p>
<p><strong><a href="#344" title="2011-04-21 14:13:26">Shoaibi</a>:</strong> Have i missed it or is there no example routes file for this module?</p>
<p><strong><a href="#345" title="2011-04-21 14:25:53">Mikito Takada</a>:</strong> You don&#39;t need extra routing for most of the functionality, since the default /controller/action routes are fine e.g. /user/login/ =&gt; Controller_User -&gt; action_login. The few additional routes for Useradmin are defined in the init.php file.</p>
<p><strong><a href="#346" title="2011-04-21 14:36:39">Shoaibi</a>:</strong> great...
One more question.
I have got Facebook, Google, Yahoo and Recaptcha working. Twitter gives: ErrorException [ Fatal Error ]: Class &#39;OAuth_Consumer&#39; not found</p>
<p>whereas oauth is enabled in bootstrap. Did i miss a module?</p>
<p><strong><a href="#347" title="2011-04-21 14:43:12">Shoaibi</a>:</strong> One word, AWESOME.
So well thought and organized, Keep the good work up.</p>
<p><strong><a href="#348" title="2011-04-21 14:52:46">Mikito Takada</a>:</strong> Yeah, you need Kohana-Oauth for Twitter support:</p>
<p><a href="https://github.com/kohana/oauth">https://github.com/kohana/oauth</a></p>
<p>If you need email support, you can try with banks Kohana-Email module, but I will need to give that part of the code another look to ensure 3.1.x compatibility for email sending.</p>
<p><strong><a href="#349" title="2011-04-21 14:58:39">Shoaibi</a>:</strong> had a typo there, fixed that, working great.</p>
<p>Btw, any chances of adding user email activation support before one can login?</p>
<p><strong><a href="#350" title="2011-04-21 15:14:13">Mikito Takada</a>:</strong> Maybe closer to the summer when I get a chance to recheck the email code, but for now, I have no free time! If you build it, I&#39;ll include it in the module, however.</p>
<p><strong><a href="#351" title="2011-05-04 19:39:02">Dinesh Shah</a>:</strong> Mikito,</p>
<p>Your module is awesome. I am investigating it if I can use it my apps. It sure will help me with implementing my own auth. :-)</p>
<p>How do I submit a patch for changes I made to make it compatible with KO 3.1?</p>
<p>This patch uses Shadowhand&#39;s email module instead of Bank&#39;s which is not(?) compatible with KO 3.1 as discussed in this Kohana Forum Post - <a href="http://forum.kohanaframework.org/discussion/comment/58597#Comment_58597">http://forum.kohanaframework.org/discussion/comment/58597#Comment_58597</a></p>
<p>I have also removed/replace Security::xss_clean()call to PHP&#39;s filter_vars() in reset password method.</p>
<p>Once again thanks for your great work.</p>
<p>295c295,296</p>
<h2 id="set-username-security-xss_clean-_get-username-">set(&#39;username&#39;, Security::xss_clean($_GET[&#39;username&#39;]));</h2>
<p>&gt; //            $view-&gt;set(&#39;username&#39;, Security::xss<em>clean($<em>GET[&#39;username&#39;])); // KO 3.1 removed this method from Security class
&gt;             $view-&gt;set(&#39;username&#39;, filter<em>var($<em>GET[&#39;username&#39;], FILTER<em>SANITIZE<em>STRING));
339c340,345
             /<em>
&gt;              </em> Changes made to use shadowhand&#39;s email module (wrapper for SwiftMailer)
&gt;              */
&gt;
&gt; //            $mailer = Email::connect();
&gt;             $mailer = Email::factory();
342,345c348,355
&lt;             $subject = <strong>(&#039;Account password reset&#039;);
&lt;             $to = $_POST[&#039;reset_email&#039;];
email_address;
 //            $subject = </strong>(&#39;Account password reset&#39;);
&gt;             $mailer-&gt;subject(__(&#39;Account password reset&#39;));
&gt; //            $to = $_POST[&#39;reset_email&#39;];
&gt;             $mailer-&gt;to($_POST[&#39;reset_email&#39;]);
&gt; //            $from = Kohana::config(&#39;useradmin&#39;)-&gt;email_address;
&gt;             $mailer-&gt;from(Kohana::config(&#39;useradmin&#39;)-&gt;email_address);
&gt; //            $body =  </em></em>($message, array(
&gt;             $mailer-&gt;message(</em></em>($message, array(
350,355c360,367
&lt;             ));
&lt;             $message_swift = Swift_Message::newInstance($subject, $body)
setFrom($from)
setTo($to);
send($message_swift)) {
             )));
&gt; //            $message_swift = Swift_Message::newInstance($subject, $body)
&gt; //                    -&gt;setFrom($from)
&gt; //                    -&gt;setTo($to);
&gt;
&gt; //            if($mailer-&gt;send($message_swift)) {
&gt;             if($mailer-&gt;send()) {
&gt;              Message::add(&#39;success&#39;, </em></em>(&#39;Password reset email sent.&#39;));</p>
<p><strong><a href="#352" title="2011-05-09 13:45:59">Carnevalle</a>:</strong> Hi Mikito,</p>
<p>Thank you for an awesome module. I am still trying to get my head around Kohana and how to extend your module with my own pages, but for now I too am struggling with getting the Facebook connect to work.</p>
<p>I have, to the best of my knowledge, setup the API keys in the config file and configured the canvas URLS in my app to <a href="http://actualskill.com/beta/user/provider_return/facebook/">http://actualskill.com/beta/user/provider_return/facebook/</a></p>
<p>Whenever I try to register a new user or connect a user to Facebook it just redirects me to facebook.com. There is no callback to my site.</p>
<p><strong><a href="#353" title="2011-05-12 20:24:11">Jean-Nicolas Boulay Desjardins</a>:</strong> This is the error I get:</p>
<p>ErrorException [ Fatal Error ]: Call to undefined method Auth_ORM::register()</p>
<p>It does not make any sense...</p>
<p>in my boot* I have added orm and auth... I can not see why I am getting this error.</p>
<p>Thanks Mixu in advance :)</p>
<p><strong><a href="#354" title="2011-05-12 22:31:56">Mikito Takada</a>:</strong> For future readers: We talked this over, answer is that you should load the Useradmin module before the Auth module, since otherwise the wrong file gets loaded (Useradmin extends the Core auth a little).</p>
<p><strong><a href="#355" title="2011-05-14 04:20:12">Jack</a>:</strong> Would just like to add that if you are receiving a benchmark page when you extend Controller_App, that you need to set auto_render to false.</p>
<p>public $auto_render = FALSE;</p>
<p><strong><a href="#356" title="2011-05-26 17:51:19">Dinesh Shah</a>:</strong> Mikito,</p>
<p>I would like to use email for all actions (login etc.). I do not want to keep &#39;username&#39; column in my user table.</p>
<p>I have tried to over ride rules() in Model_User without success. :-(</p>
<p>Any pointers?</p>
<p>Thanks for your time.</p>
<p><strong><a href="#357" title="2011-05-27 16:08:47">Daniel Ribeiro Gomes</a>:</strong> Hey man, how are you doing?</p>
<p>I&#39;ve been working with this module for sometime now, and i&#39;m having a trouble related to the Session Database Driver.</p>
<p>Somehow, when I set the default adapter to be the database adapter on bootstrap, like this:</p>
<p>Session::$default = &quot;database&quot;;</p>
<p>I get a lost of failures on the test batteries, usually related to login actions.</p>
<p>I&#39;m currently using Kohana 3.1.x, with Useradmin module enabled.</p>
<p>Does anyone have an idea about that?</p>
<p>Thanks!</p>
<p><strong><a href="#358" title="2011-06-07 18:36:36">Chris</a>:</strong> My database is throwing an exception because in the schema,  <code>last_failed_login</code> datetime NOT NULL so when I create a user I&#39;m getting:
Database_Exception [ 1364 ]: Field &#39;last_failed_login&#39; doesn&#39;t have a default value</p>
<p><strong><a href="#359" title="2011-06-11 02:24:01">Marcelo Rodrigo</a>:</strong> Your module is really awesome, good job!
A hug from Brazil</p>
<p><strong><a href="#360" title="2011-06-22 22:03:25">Sam</a>:</strong> @Zoran - Did you figure out how to get the Facebook API to work? I&#39;m having the exact same problem as you and have traced it to the same getSession() function.  Not sure why the session is not coming back.</p>
<p><strong><a href="#361" title="2011-06-22 22:23:25">Sam</a>:</strong> Alright, I found the problem. For some reason the &#39;session&#39; variable from $_GET[&#39;session&#39;] cannot be obtained using $_REQUEST[&#39;session&#39;].  I was able to see the session variable passed in thru the address bar.  So what I did was commented the section with $_REQUEST and replaced it with this:</p>
<pre class="hljs"><code>  <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$session</span> &amp;amp;&amp;amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#39;session&#39;</span>])) {
    <span class="hljs-variable">$session</span> = json_decode(
      get_magic_quotes_gpc()
        ? stripslashes(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#39;session&#39;</span>])
        : <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#39;session&#39;</span>],
      <span class="hljs-keyword">true</span>
    );
    <span class="hljs-variable">$session</span> = <span class="hljs-variable">$this</span>-&amp;gt;validateSessionObject(<span class="hljs-variable">$session</span>);
  }</code></pre><p>Now it works but when I try to register with a Facebook login, it tells me that it cannot obtain all the required information and the user still need to fill out the form.  It works fine if you already have an account and just associate your Facebook account with it.</p>
<p><strong><a href="#362" title="2011-06-30 13:20:12">Maz</a>:</strong> Thanks for this awesome module! But i still have problems with the email module on K3.1.. Is there any fix for new module for this?</p>
<p><strong><a href="#363" title="2011-06-30 13:20:54">Maz</a>:</strong> Could you possibly upload the module? :-)</p>
<p><strong><a href="#364" title="2011-07-01 12:10:13">Dinesh Shah</a>:</strong> @Maz,</p>
<p>I do not have commit access yet.</p>
<p><strong><a href="#365" title="2011-07-01 12:11:47">Dinesh Shah</a>:</strong> @Mikito,</p>
<p>I would like to add Roles Management in this module.</p>
<p>How do I submit patch/files?</p>
<p><strong><a href="#366" title="2011-07-14 08:49:10">k2011</a>:</strong> I am getting a &quot;The page isn&#39;t redirecting properly&quot;  once the user logs in. Anyone with an idea of how this can be resolved? Thanks</p>
<p><strong><a href="#367" title="2011-07-30 02:24:05">robo</a>:</strong> Awsome,</p>
<p>do you plan to write about acount validation via a link in an email?
is this feature included in auth?</p>
<p><strong><a href="#368" title="2011-08-26 18:09:19">buggy-13</a>:</strong> I hava a question about validating register form.</p>
<p>userclassesuseradminmodeluser.php</p>
<p>public function rules()
    {
        $parent = parent::rules();
        // fixes the min_length username value
        $parent[&#39;username&#39;][1] = array(&#39;min_length&#39;, array(&#39;:value&#39;, 1));
        return $parent;
    }</p>
<p>I have checked and I think line &#39;$parent[&#39;username&#39;][1] &#39;
overrides:
array(&#39;max_length&#39;, array(&#39;:value&#39;, 32)),</p>
<p>is it correct?</p>
<p>I use Kohana 3.2</p>
<p><strong><a href="#369" title="2011-08-30 20:31:21">Crates</a>:</strong> I have a copy of this suite updated for Kohana 3.2 if anyone wants it. Send me an e-mail (typing at gmail dot com) if you want a copy.</p>
<p><strong><a href="#370" title="2011-09-02 20:14:23">Nightnyt</a>:</strong> @Crates
send me one :)  NightFightNight@gmail.com</p>
<p><strong><a href="#371" title="2011-09-05 09:55:47">Lyndon</a>:</strong> I&#39;v also ported this to ko3.2.
I had a lot of issues with getting the user_identity table to work. It didn&#39;t help that there were multiple versions of the database with different table names. In the end I worked out that it was converting the table name user_identity to user_identities because of the ORM $_table_names_plural value. After fixing that and making a few other small changes everything seems to be working fine.</p>
<p>Does anyone know if the introduction of $_table_names_plural to the ORM module is new to 3.2? I dont even understand why it would be used....</p>
<p>Let me know if people will be interested in the updated module and I&#39;ll make it publicly available.</p>
<p><strong><a href="#372" title="2011-09-05 10:39:24">dex</a>:</strong> send me one too please     denhimera753@gmail.com
:)</p>
<p><strong><a href="#373" title="2011-09-07 21:00:36">Nightnyt</a>:</strong> we can work to create a basic tutorial on how the framework works. like basic login, registration, fetching data etc.</p>
<p>im just planning to make one soon, but im still new on this. so 3.2 would be a great start.</p>
<p><strong><a href="#374" title="2011-09-11 05:36:48">Crates</a>:</strong> Yeah, I had the same problem with the pluralities. There are still some issues I&#39;m working out with the retrieval and commitment of data in the user management screen; the creation of the users is working but the view/edit is screwy. Lyndon, if you&#39;ve already worked that out, e-mail me (typing@gmail.com); if not, well, I should have it taken care of in a day or two.</p>
<p>There&#39;s already been like seven people requesting me via e-mail for the finished copy of this script, and my boss really wants it too (^_^) so I should be able to hook everyone up very soon.</p>
<p><strong><a href="#375" title="2011-09-11 22:10:00">Crates</a>:</strong> Okay... I&#39;m almost done with the changes to the 3.2 port and I&#39;ve created a Google Code project for anyone who wants to help to maintain it or wants a copy in the future.</p>
<p>Mikito, please e-mail me (typing@gmail.com) if you are reading this because I could REALLY use some advice to expedite the completion of this migration.</p>
<p>Right now I&#39;m working on resolving some issues with OAuth, as that component is still only partially working.</p>
<p><strong><a href="#376" title="2011-09-13 21:36:57">Jeremie Weldin</a>:</strong> @crates: why not just fork the project on github?</p>
<p><strong><a href="#377" title="2011-09-14 06:22:46">Jeremie Weldin</a>:</strong> &quot;If you just need an extra field, you can add that in the database. The code for saving users is flexible enough that it will save new fields if they exist in the database.&quot;</p>
<p>I noticed that when attempting to add new fields to the user table, you can&#39;t just add fields to the database and then modify the views.  The register method of Useradmin_Auth_ORM calls:</p>
<p>$user-&gt;create_user($fields, array(
                &#39;username&#39;,
                &#39;password&#39;,
                &#39;email&#39;,
            ));</p>
<p>which sets the expected fields to only the 3 specified.  In order to add fields to the user you would need to pass NULL for the expected fields or add your custom fields to the array.</p>
<p>Please correct me if I am wrong.</p>
<p><strong><a href="#378" title="2011-09-14 22:18:13">Kenny</a>:</strong> I managed to get everything to work in Ko 3.2 — update the Controller Action Parameters in user.php as the conventions have changed and the provider_name was returning null so I put:
$provider_name = $this-&gt;request-&gt;param(&#39;provider&#39;);</p>
<p>Also gotta update oauth with the patch Revision 78867c4b from the kohana repo.</p>
<p>And some other things too, but for me those seemed to be the key things...</p>
<p>Don&#39;t forget to update any references from user_identity to user_identities...</p>
<p>Thanks to Mixu for putting this together, it&#39;s a great way to get into Kohana.</p>
<p><strong><a href="#379" title="2011-09-22 12:23:36">Enigma</a>:</strong> Hi Kenny/ Crate ... can you share the working 3.2 code for useradmin .... kindly let me ... im quite to kohana ... just want to start now ... kindly help me</p>
<p><strong><a href="#380" title="2011-09-22 22:32:11">Enigma</a>:</strong> Kohana 3.2 Modules Changes</p>
<p>Just be brave and copy the 3.1 module enable it and set it as mentioned above.</p>
<ol>
<li><p>The first issue would the table name &#39;user_identities &#39; .... just rename the table &#39;user_identity&#39;  to user_identities.</p>
</li>
<li><p>Just login and It will look like everything is working then you would find that pagination has a issue just change &#39;Kohana::config&#39; to Kohana::$config-&gt;load</p>
</li>
<li><p>All set now for your own auth .. now lets look at the providers ... you try to connect but you would be getting &#39;Provider is not enabled; please select another provider or log in normally.&#39; The providers are enabled by default ... but the issue is $provider_name = null ... search for it and right below it add this line</p>
</li>
</ol>
<h2 id="-provider_name-this-gt-request-gt-param-id-">$provider_name = $this-&gt;request-&gt;param(‘id’);</h2>
<h2 id="kenny-s-suggesting-didnt-work-for-me-just-debug-var-this-gt-request-provider_name-this-gt-request-gt-param-provider-is-not-right-param-id-seems-to-be-the-right-one-">Kenny&#39;s suggesting didnt work for me...  just Debug::var($this-&gt;request) ... $provider_name = $this-&gt;request-&gt;param(‘provider’) is not right , param(&#39;id&#39;) seems to be the right one.</h2>
<p>I will keep posting updates as i digg through it and its just a while since i started :) hope we will be having a complete working port here soon .... guys if im missing something kindly correct me ... this is one of the core modules and its very important its up to date ... lets share the pain :)</p>
<p><strong><a href="#381" title="2011-09-26 22:04:26">Kon kana</a>:</strong> Can anyone share the latest or 3.2 based version link....</p>
<p><strong><a href="#382" title="2011-10-08 21:18:34">bigredc2</a>:</strong> I would love if you could send me your 3.2 port of this.  My email is (bigredc at hotmail)</p>
<p><strong><a href="#383" title="2011-10-11 21:58:38">John</a>:</strong> Thank-you very much Mixu.</p>
<p>This would have to be one of the best resources (the documentation and discussion) out there and it is exactly what I am looking for.</p>
<p>Would love a 3.2 version, or some help....</p>
<p>I changed table to user_identities...
I added a default value for users.last_failed_login
Now I have not &#39;an instance of Validation&#39; in user.php on line 217.</p>
<p>I appreciate modules and documentation like this.... to learn from, to leverage off,... but (unfortunately) I am almost good enough to be a user of these tools, but not a developer of....</p>
<p>Any pointers or assistance greatly appreciated. If anyone has code that works with Kohanan 3.2 then I&#39;d love a copy. :-) Thank-you</p>
<p><strong><a href="#384" title="2011-10-20 10:41:28">Enigma</a>:</strong> Do u have a working 3.2 copy ? if anyone does kindly mail me at lvlr.enigma@@at@@gmail.com</p>
<p><strong><a href="#385" title="2011-10-20 13:04:57">Enigma</a>:</strong> 4.     MODPATHpaginationclasseskohanapagination.php [ 199 ]</p>
<p>change</p>
<p>return URL::site(Request::current()-&gt;uri).URL::query(array($this-&gt;config[&#39;current_page&#39;][&#39;key&#39;] =&gt; $page));</p>
<p>to</p>
<p>return URL::site(Request::current()-&gt;uri()).URL::query(array($this-&gt;config[&#39;current_page&#39;][&#39;key&#39;] =&gt; $page));</p>
<p>current()-&gt;uri become current()-&gt;uri()</p>
<p>to be continued .... im going to add the changes as they come .... hope im going the right way and the community notices this .... 3.2 migration is really needed ... and almost a month since i looked in to it but ... guys lets close this off today :) ...</p>
<p><strong><a href="#386" title="2011-10-20 13:51:21">Enigma</a>:</strong> 5. MODPATHuserclassesuseradmincontrolleradminuser.php [ 76 ]</p>
<p>change</p>
<p>public function action_edit($id= NULL)
    {
to</p>
<p>public function action_edit()
    {
        $id = $this-&gt;request-&gt;param(&#39;id&#39;, NULL);</p>
<p>to be continued.....</p>
<p><strong><a href="#387" title="2011-10-20 14:04:51">Enigma</a>:</strong> 6. MODPATHuserclassesuseradmincontrolleradminuser.php [ 218 ]</p>
<pre class="hljs"><code>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action_delete</span><span class="hljs-params">(<span class="hljs-variable">$id</span>=NULL)</span>
</span>{

<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">action_delete</span><span class="hljs-params">()</span>
</span>{
    <span class="hljs-variable">$id</span> = <span class="hljs-variable">$this</span>-&amp;gt;request-&amp;gt;param(<span class="hljs-string">&#39;id&#39;</span>, <span class="hljs-keyword">NULL</span>);</code></pre><p><strong><a href="#388" title="2011-10-20 20:36:39">Palkonyves</a>:</strong> First of all, some changes I deeded for Kohana v3.2:</p>
<p>-- Fixing errors of &#39;table  .user_identities not found&#39;:</p>
<pre class="hljs"><code><span class="hljs-keyword">in</span> useradmin<span class="hljs-regexp">/classes/</span>useradmin<span class="hljs-regexp">/model/</span>user/identity.php add the following ORM <span class="hljs-string">property:</span></code></pre><p>   protected $_table_name = &quot;user_identity&quot;;</p>
<p>-- Fixing pagination errors for user admin, you have to touch the pagination module in
    pagination/classes/kohana/pagination.php in line 92:
    $config_file = Kohana::$config-&gt;load(&#39;pagination&#39;)</p>
<p>Otherwise This is a really good working example of a neatly constructed Kohana module. I would do some decomposition for example in user_admin/edit, but otherwise it is very well structured.</p>
<p>checking out the template files I realized the existence of a Datatable helper, which is something I started to and wanted to implement.</p>
<p>Thanks for this module</p>
<p><strong><a href="#389" title="2011-10-21 09:28:20">Enigma</a>:</strong> Kindly follow my updates ... im almost done with porting except facebook twitter and captcha validation ... hopefully it will be done today .. if u are interested in joinin wud be great</p>
<p><strong><a href="#390" title="2011-10-21 10:21:23">otakurzo</a>:</strong> SOLUTIONS for Kohana 3.1</p>
<p>[b]1. Routing fail with providers[/b]</p>
<p>classesuseradmincontrolleruser.php
Functions:</p>
<ul>
<li>action_provider</li>
<li>action_associate</li>
<li>action_associate_return</li>
<li>action_provider_return</li>
</ul>
<p>Remove the parameters &quot;$provider_name = NULL&quot; and
below put
$provider_name = $this-&gt;request-&gt;param(&#39;provider&#39;);</p>
<p>[b]2. Facebook: getSession deprecated in PHP SDK 3.x[/b]
classesuseradminproviderfacebook.php
Change &quot;getSession&quot; to &quot;getUser&quot;.
Reference: <a href="http://developers.facebook.com/blog/post/503/">http://developers.facebook.com/blog/post/503/</a></p>
<p><strong><a href="#391" title="2011-10-23 18:55:45">Palkonyves</a>:</strong> I will use this module in a bigger project (obviusly :) and I will need a group management. When I implement it, I&#39;ll be glad to merge the improvement.</p>
<p><strong><a href="#392" title="2011-10-26 22:26:14">Enigma</a>:</strong> 7.  Twitter and Facebook integration are very well inbuilt ... but need little tweaks</p>
<p>Twitter :  place ca-bundle.crt in config directory.
if you dont know where to find ca-bundle.crt goto <a href="http://curl.haxx.se/docs/caextract.html">http://curl.haxx.se/docs/caextract.html</a> download cacert.pem and rename it to ca-bundle.crt</p>
<p>Facebook:  classes/useradmin/provider/facebook.php [43]</p>
<p>replace</p>
<pre class="hljs"><code>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">verify</span><span class="hljs-params">()</span>
</span>{
    <span class="hljs-keyword">if</span> ($<span class="hljs-keyword">this</span>-&amp;gt;facebook-&amp;gt;getSession())
    {</code></pre><p>with</p>
<pre class="hljs"><code><span class="hljs-keyword">public</span> function verify()
{
    <span class="hljs-variable">$this</span><span class="hljs-subst">-&amp;</span><span class="hljs-literal">gt</span>;uid <span class="hljs-subst">=</span> <span class="hljs-variable">$this</span><span class="hljs-subst">-&amp;</span><span class="hljs-literal">gt</span>;facebook<span class="hljs-subst">-&amp;</span><span class="hljs-literal">gt</span>;getUser();
    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$this</span><span class="hljs-subst">-&amp;</span><span class="hljs-literal">gt</span>;uid)
    {</code></pre><p>both facebook and twitter login are not properly bakedup ... they are working as associations . new registrations fails and prompts the user for email and password .... is this behavior expected .... i personally think there could be a better way to handle new registrations using twitter and facebook :)</p>
<p><strong><a href="#393" title="2011-10-27 04:33:09">Enigma</a>:</strong> just an amendment for the previous post ... twitter doet provide email and hence we hv no other option to go around it ... but with facebook the issue is with the update in the facebook php sdk ...</p>
<p>&quot;the req_perms parameter has been changed to scope &quot;</p>
<p>Facebook: classes/useradmin/provider/facebook.php [35]</p>
<p>change req_perms to scope</p>
<p><strong><a href="#394" title="2011-11-17 15:12:38">Robert C</a>:</strong> Can you please send me a copy?</p>
<p>robert AT dubbel16 DOT nl</p>
<p><strong><a href="#395" title="2011-11-21 17:01:19">samuele</a>:</strong> i have problems with config load,
the setup is ok but i have this error
Undefined index: max_failed_logins .</p>
<p>is like the useradmin config file wasn&#39;t read</p>
<p><strong><a href="#396" title="2011-11-28 00:48:57">Daniel Ribeiro</a>:</strong> I would like to understand why you didn&#39;t use the user_tokens table that comes with Auth module to store the reset password tokens.</p>
<p>Is there any specific reason to create the reset_token field?</p>
<p><strong><a href="#398" title="2011-12-09 04:31:27">Asummption</a>:</strong> user_token table is for remember me option ... its auto cleaned ... ie records are deleted after a specific period ... to make the reset password token independant from the remember me token ..</p>
<p><strong><a href="#399" title="2011-12-27 09:29:21">Gerald Yeong</a>:</strong> Thank you @Enigma, Just wanted to thank you for your hardwork. Thanks mixu for developing this from the start and also the rest that kept this going.</p>
<p><strong><a href="#400" title="2011-12-29 20:52:31">SpaceDoG</a>:</strong> Has anyone fixed the issue with the page not redirecting properly after login?</p>
<p><strong><a href="#401" title="2011-12-30 03:52:25">SpaceDoG</a>:</strong> So I&#39;ve gotten everything working with the exception of facebook logins. It&#39;s set to true in the config and I&#39;ve updated the user.php controller to fix all of the nulls but it still won&#39;t work... Just keep getting the &quot;Provider is not enabled; please select another provider or log in normally.&quot; error. Any thoughts?</p>
<p><strong><a href="#402" title="2011-12-30 15:43:03">SpaceDoG</a>:</strong> I got em all working now.</p>
<p><strong><a href="#403" title="2012-01-03 01:49:35">Dave</a>:</strong> I found an issue relating to login when using sub directories.</p>
<p>My Kohana install is in <a href="http://URL/subdir/">http://URL/subdir/</a></p>
<p>In
/classes/useradmin/controller/user.php
[47] $urlPath = ltrim(parse_url($this-&gt;request-&gt;referrer(),PHP_URL_PATH),&#39;/&#39;);</p>
<p>Will return /subdir/controller/action/
which then fails when you try to find the correct controller further down causing an infinite redirection loop.</p>
<p>I replaced it with
$urlPath = ltrim(substr($this-&gt;request-&gt;referrer(), strlen(Url::base(true))),&#39;/&#39;);</p>
<p>Which appears to work.</p>
<p>Dave.</p>
<p><strong><a href="#404" title="2012-01-10 23:04:18">Jan Hohner</a>:</strong> Could it be that you didn&#39;t copy the two routes in init.php? If you didn&#39;t the param is called &#39;id&#39;, if you copied the routes the param is called &#39;provider&#39;.</p>
<p>Cheers,
Jan</p>
<p><strong><a href="#405" title="2012-01-12 18:40:41">trig</a>:</strong> hi Dave, how did you get them working... I&#39;m having same issues with facebook login</p>
<p><strong><a href="#406" title="2012-01-17 23:09:53">Sam</a>:</strong> Is there any place, on github where we could download a working version of useradmin for kohana 3.2. The one from mixu didnt work for 3.1 or 3.2.</p>
<p>Thanks</p>
<p><strong><a href="#407" title="2012-01-19 14:53:45">kenyana</a>:</strong> Anyone with a solution to ErrorException [ Notice ]: Undefined index: max_failed_logins</p>
<p>Its at MODPATHuserclassesuseradminauthorm.php [ 27 ]</p>
<p><strong><a href="#408" title="2012-03-01 16:16:10">Sven Walter</a>:</strong> Is there a 3.2 version out there? i am interested :) could someone send me a copy? big thx!</p>
<p><strong><a href="#409" title="2012-03-07 08:54:36">Matt</a>:</strong> There is a 3.2 version of useradmin on github. Here is the url: <a href="https://github.com/rafsoaken/useradmin/">https://github.com/rafsoaken/useradmin/</a></p>
<p><strong><a href="#410" title="2012-03-27 07:18:22">Cory</a>:</strong> (Caveat: Still noobish to kohana 3.2)</p>
<p>That version doesn&#39;t (quite) seem to be updated for 3.2.  It was relatively easy to set up, but you will still run into some problems with the actions using arguments instead of request-&gt;param( [route parameter] ).</p>
<p>One example is trying to select a provider on the login page. Located in Useradmin_Controller_User::action_provder.</p>
<p>function action_provider($provider_name = null)
{
...</p>
<p>Should be</p>
<p>function action_provider()
{
     $provider_name = $this-&gt;request-&gt;param(&#39;provider&#39;);
...</p>
<p>You can find the params in the routes, which are located in modules/useradmin/init.php</p>
<p><strong><a href="#411" title="2012-04-05 05:13:23">songerph</a>:</strong> Hi can i ask for help? I managed to make most of the useradmin module to work for Kohana 3.1 except for facebook and twitter login/assoc.</p>
<p>Facebook:
When I click either buttons, it sends me to
facebook.com/dialog/oauth?all-parameters-here
with an Error page stating &quot;An error occurred. Please try again later.&quot;</p>
<p>Twitter:
It gives an error regarding certificate problem:</p>
<p>Error fetching remote <a href="https://api.twitter.com/oauth/request_token">https://api.twitter.com/oauth/request_token</a> [ status 0 ] SSL certificate problem, verify that the CA cert is OK. Details: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed</p>
<p>Anyone got same issues?</p>
<p>TIA.</p>
<p><strong><a href="#412" title="2012-04-16 16:45:22">songerph</a>:</strong> Update:
I managed to get FB login to work by adding &quot;.../user/provider/facebook&quot; in my app&#39;s &quot;Website -&gt; Site URL&quot; info page. Seems like without this my FB login does not continue redirecting. (Or should  the FB login/associate work without this?)</p>
<p>Twitter: Still with the Certificate error</p>
<p><strong><a href="#575" title="2012-08-10 09:10:06">moisha</a>:</strong> Hi Mikito - THXXXX 4 this modul - it&#39;s really what I&#39;ve been looking for.</p>
<p>But there are 2 things that I don&#39;t understand:</p>
<ol>
<li>Is this a problem of kohana auth module, that u can&#39;t say that one page is accessible for login and for admin users?</li>
<li>when i click on a provider (ex. FB) he opens the FB-Login-Page in the same window - have u already tried to implement it via new Window, so that the person stays on the main page?</li>
</ol>
<p>thx</p>
<p><strong><a href="#584" title="2012-09-24 21:44:39">newtophp</a>:</strong> I have configured the module to work with Facebook but I am getting the error below:</p>
<p>&quot;We have successfully retrieved some of the data from your other account, but we were unable to get all the required fields. Please complete form below to register an account.&quot;</p>
<p>Any ideas?</p>
<p><strong><a href="#648" title="2013-02-26 13:16:12">nessa_uepa</a>:</strong> Hi, I am making the changes needed to this module work in Kohana 3.3. I will post it here after i finish.</p>
<p><strong><a href="#652" title="2013-02-27 00:30:58">nessa_uepa</a>:</strong> I just migrated the Useradmin module to Kohana 3.3.0.</p>
<p>I documented the changes in my blog:</p>
<p><a href="http://www.nessauepa.com.br/blog/2013/02/migrating-mixus-useradmin-module-to-kohana-3-3-0/">http://www.nessauepa.com.br/blog/2013/02/migrating-mixus-useradmin-module-to-kohana-3-3-0/</a></p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Thu, 13 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Implementing Facebook login (part 3)]]></title><description><![CDATA[<p>Damn Facebook documentation! I finally managed to piece together a better picture - after first getting all that info in the previous posts (<a href="http://blog.mixu.net/2010/12/27/implementing-facebook-login-single-sign-on-part-1/">part 1</a>, <a href="http://blog.mixu.net/2011/01/03/implementing-facebook-login-part-2/">part 2</a>) - about how registration and login can be handled.</p>
<p>Basically, you can&#39;t use the registration tool unless you really want to replace your registration dialog with Facebook&#39;s own version. You can&#39;t redirect to it conditionally, e.g. if the user has Facebook and clicks the login button, since the login will already trigger the Facebook authorization process.</p>
<p>So unless you want two logins (Facebook login link and regular login form) and two registration links (regular registration page and Facebook register page), you can&#39;t use the registration tool. My ideal implementation would just have a single link for everything related to Facebook, but present the full registration form if the user clicks it and has not yet registered with my site... no luck.</p>
<p>Hence, I will do this the traditional way:</p>
<ul>
    <li>Use the Javascript SDK to render the Facebook Login link and popup.</li>
    <li>Ask for additional permissions on the Login.</li>
    <li>When the authorization returns, process the user login / registration.</li>
    <li>If the user wants to register using Facebook, then they will still need to fill in additional fields in a separate field after authorizing the information we can read from Facebook.</li>
</ul>
<h2>Preparations</h2>
<strong>Get an app<em>id and a secret from Facebook. </strong><a href="http://developers.facebook.com/setup/">Register your website/app here</a> to get an app<em>id and secret.

<strong>Add the Facebook namespace.</strong> Your HTML tag should contain the additional xmlns:fb -attribute so that the Facebook custom tags work with IE:


<code>html
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:fb=&quot;http://www.facebook.com/2008/fbml&quot;&amp;gt;</code>

I did not know you could add XML namespaces to your documents and actually have custom tags which work in all current browsers, but since Facebook does it, it must have been tested well.
<h2>Rendering the Facebook login link and popup</h2>
[codesyntax lang=&quot;php&quot;]

<code>html
&amp;lt;div id=&quot;fb-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
    window.fbAsyncInit = function() {
        FB.init({
            appId   : &#39;&amp;lt;?php echo $facebook-&amp;gt;getAppId(); ?&amp;gt;&#39;,
            session : &amp;lt;?php echo json_encode($session); ?&amp;gt;, // don&#39;t refetch the session when PHP already has it
            status  : true, // check login status
            cookie  : true, // enable cookies to allow the server to access the session
            xfbml   : true // parse XFBML
    });
    // whenever the user logs in, we tell our login service
    FB.Event.subscribe(&#39;auth.login&#39;, function() {
       window.location = &quot;&amp;lt;?php echo URL::site(&#39;/user/fb_login&#39;) ?&amp;gt;&quot;;
    });
  };

  (function() {
    var e = document.createElement(&#39;script&#39;);
    e.src = document.location.protocol + &#39;//connect.facebook.net/en_US/all.js&#39;;
    e.async = true;
    document.getElementById(&#39;fb-root&#39;).appendChild(e);
  }());
&amp;lt;/script&amp;gt;</code>

[/codesyntax]
<h2>Asking for additional permissions</h2>
You have to do this by adding the perms attribute to the fb:login-button tag. The links in the docs are broken, but <a href="http://developers.facebook.com/docs/reference/plugins/login">here is the page documenting the login button</a> and the <a href="http://developers.facebook.com/docs/authentication/permissions/">extended permissions you can ask for are listed here</a>.

We&#39;ll just ask for the email address:


<code>html
&amp;lt;fb:login-button perms=&quot;email&quot; size=&quot;large&quot;&amp;gt;&amp;lt;/fb:login-button&amp;gt;</code>

<h2>Processing the resulting login or registration</h2>
As you can see above, we subscribe to the auth.login event using Javascript and specify that on completion, the user will be redirected to /user/fb_login/.

On that page, we need to:
<ol>
    <li>Check whether a user account exists with the returned Facebook user id.</li>
    <li>If no user is found with the FB uid, retrieve the user&#39;s email via the Graph API and check whether a user exists with that email. If so, we will merge the user.</li>
    <li>If no user is found with the FB email, create a new account.</li>
    <li>If creating a new user fails, then accept defeat and show the regular registration page.</li>
</ol>
A complete implementation of this available from Bitbucket - soon! I&#39;m releasing it as part of my Useradmin module for Kohana 3.
<h2>Logging out</h2>
We need to handle logging out sensibly. I prefer that the user explicitly clicks a login button if they do not currently have a session with our application. Automatic relogin is confusing, particularly when logging out usually redirects to the login page.

So we need to handle the case where the person is connected (logged in to Facebook and authorized with us) by displaying a custom login button.

You can find the Facebook logo from the branding site. Of course, a Google search for facebook logo won&#39;t find it, so <a href="http://www.facebook.com/brandpermissions/logos.php">click here to get the image</a> that you are allowed to use for this purpose.

````js
    window.fbAsyncInit = function() {
        FB.init({
            appId   : &#39;&lt;?php echo Kohana::config(&#39;facebook&#39;)-&gt;app_id; ?&gt;&#39;,
            status  : true, // check login status
            cookie  : true, // enable cookies to allow the server to access the session
            xfbml   : true // parse XFBML
    });
    // whenever the user logs in, we tell our login service
    FB.Event.subscribe(&#39;auth.login&#39;, function() {
       window.location = &quot;&lt;?php echo URL::site(&#39;/user/fb_login&#39;) ?&gt;&quot;;
    });
    // if the user is already logged in, redirect them to the login action
    // they cannot reach the login page if they are already logged in
    // since login() redirects to profile if the user is logged in
   FB.getLoginStatus(function(response) {
     if (response.status == &#39;connected&#39;) {
        document.getElementById(&#39;fb-login-li&#39;).innerHTML = &#39;&lt;a href=&quot;&lt;?php echo URL::site(&#39;/user/fb_login&#39;) ?&gt;&quot;&gt;&lt;img src=&quot;/img/fb-login.png&quot;&gt;&lt;/a&gt;&#39;;
     } else {
        document.getElementById(&#39;fb-login-li&#39;).innerHTML = &#39;&lt;fb:login-button perms=&quot;email&quot; size=&quot;large&quot;&gt;&lt;?php echo </em></em>(&#39;Login / Register with Facebook&#39;)?&gt;&lt;/fb:login-button&gt;&#39;;
        FB.XFBML.parse(document.getElementById(&#39;fb-login-li&#39;));
     }
   });
  };
````

<h2>Appendix: all fb:login-button attributes</h2>

The Facebook documentation does not list the fb:login-button attributes, which is infuriating. I found a forum post (<a href="http://forum.developers.facebook.net/viewtopic.php?id=72137">here</a>), which documents the optional attributes of fb:login-button:

<ul>
    <li><strong>condition</strong>; string Indicates whether the button is visible or hidden.</li>
    <li><strong>size</strong>; string Specifies the size of the button. Specify icon to display a favicon only, or small, medium, large, or xlarge. (Default value is medium.)</li>
    <li><strong>autologoutlink</strong>; bool If true and the user is already connected and has a session, then the button image changes to indicate the user can log out. Clicking the button logs the user out of Facebook and all connected sessions. (Default value is false.)</li>
    <li><strong>background</strong>; string Specifies the button image to use that is anti-aliased to match the background of your site -- whether it&#39;s pure white, light, or dark. Specify white, dark, or light. (Default value is light.) Note: You don&#39;t specify this attribute if you are using v=&quot;2&quot;.</li>
</ul>

<h2 id="comments">Comments</h2>
<p><strong><a href="#288" title="2011-01-10 12:01:56">Facebook Lead Gen</a>:</strong> This series is great! I thank you for pointing out the fb:login-button attributes. :)</p>
<p>I&#39;m currently developing a PHP script that allows email marketers to capture user details to a database through a Facebook button (<a href="http://fbleadgen.com">http://fbleadgen.com</a>) but I&#39;ve bumped into a couple of hurdles along the way due to FB&#39;s (lack of) documentation!</p>
<p><strong><a href="#290" title="2011-01-11 19:38:03">Rishabh Tripathi</a>:</strong> thank you very much for this article. can you point out the server side coding in Ruby on rails or give me some url where I can find it as I google it alot but havent found any good documentation.</p>
<p>Thanks in advance</p>
<p><strong><a href="#291" title="2011-01-29 16:35:34">Max</a>:</strong> Nice tutorial,  you helped me to catch more concepts. Expecially thanks to your graph images on lexons 1 n 2,</p>
<p>It would have been nice of u to post a zip with a complete running example.</p>
<p>In the 3rd lesson i guess u miss some steps to make it complete. For example u use some PHP class defines some where without telling how to include them in the code... Kohana::config(&#39;facebook&#39;), or PHP::url...</p>
<p>Anyway this is definitely a positive comment ...thanks</p>
<p><strong><a href="#292" title="2011-01-29 22:33:10">Mikito Takada</a>:</strong> Yeah, I kind of ran out of time to write a tutorial covering 100% of the details; you should look at the code in my Kohana auth module for a complete working implementation with all the details worked out; covering every step would probably double the length of the post.</p>
<p>Specifically, see action_fb_login in (last function in the file):
<a href="https://github.com/mixu/useradmin/blob/master/modules/user/classes/controller/useradmin/user.php">https://github.com/mixu/useradmin/blob/master/modules/user/classes/controller/useradmin/user.php</a></p>
<p>and
<a href="https://github.com/mixu/useradmin/blob/master/modules/user/views/user/login.php">https://github.com/mixu/useradmin/blob/master/modules/user/views/user/login.php</a></p>
<p>Note that the $facebook is just an instance from Facebook&#39;s PHP SDK.</p>
<p><strong><a href="#293" title="2011-05-25 08:29:21">DD</a>:</strong> Can you explain how to implement it with registration-url?</p>
<p><strong><a href="#294" title="2011-10-12 19:21:05">Comprar Acciones</a>:</strong> I&#39;m trying to follow the instructions in this post but I can not register the website for a app_id. When I enter my username and password in facebook, facebook tells me that my user or password are not valid. Why?.</p>
<p><strong><a href="#295" title="2011-12-08 15:16:31">r0h1</a>:</strong> Well I&#39;m a bit confused, after this part 3. It seems that part 2 is not valid any more, or I did not understand correctly?
Let&#39;s take foursquare facebook login as example:
They have 2 separate sign up processes, one for fb (using the Javascript SDK) and the internal one.</p>
<ul>
<li>If you register with the fb login button (javascript sdk), on next page you need to fill email and password so it will create an internal 4sq account - connected to your fb one.
Then, every time you login through fb button, the fb authentication will be taken as &quot;valid&quot; by 4sq, without requiring any other input.
So at this point, all we need to do is managing the response cookie? Can you please explain how to do that, or link from fb documentation? Cause I cannot find it....</li>
</ul>
<p><strong><a href="#296" title="2012-01-03 20:54:12">Andrew</a>:</strong> Thanks, this worked for me!</p>
<p><strong><a href="#297" title="2012-02-29 12:09:03">Rajeev Jha</a>:</strong> Hi Mixu
I have found your post to be useful during my research. I have created a post about serve side implementation here :- <a href="http://rjha94.blogspot.in/2012/02/how-to-integrate-facebook-login-with.html">http://rjha94.blogspot.in/2012/02/how-to-integrate-facebook-login-with.html</a></p>
<p>I have added robust error handling (even facebook sample has error suppressing operators) and a nice working example. Thanks</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Sun, 09 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Nginx, php-fpm and node.js install on Centos 5.5]]></title><description><![CDATA[<p>After some time with node.js I recently decided to move to nginx + php-fpm + node.js for my future servers. Here we will be installing:</p>
<ul>
    <li>Nginx as a fast HTTP server with reverse proxy to node.js</li>
    <li>php-fpm for running PHP scripts. The php-fpm (PHP FastCGI sapi) is built into the PHP core but only since 5.3.3, so we need a recent version of PHP.</li>
    <li>node.js for handling comet and high-concurrency/persistent connections.</li>
    <li>Monit is used to restart node.js in case of errors.</li>
</ul>

<p>For all the packages other than node.js (obviously, since it&#39;s new/actively changing), you can get the most recent version without to patching/compiling anything anymore.</p>
<p>Start by updating your packages and uninstalling httpd if you had it installed:</p>
<pre class="hljs"><code><span class="hljs-title">yum</span> update</code></pre><pre class="hljs"><code><span class="hljs-title">yum</span> remove httpd</code></pre><h2>Add repositories for nginx and PHP-fpm</h2>
Just add the EPEL and Remi repos:

<code>bash
rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm</code>

<h2>Install nginx and PHP-fpm</h2>

<p>Remi has the php-fpm package (php 5.3.4); EPEL has nginx:</p>
<pre class="hljs"><code>yum <span class="hljs-comment">--enablerepo=remi install php-fpm nginx</span></code></pre><p>Some other common packages:</p>
<pre class="hljs"><code>yum --enablerepo=remi install mysql mysql-<span class="hljs-keyword">server</span> php-mysql php-<span class="hljs-keyword">common</span> php-gd php-mbstring php-mcrypt php-xml php-gd php-bcmath</code></pre><p>PHPunit and PHPdocumentor:</p>
<pre class="hljs"><code>yum <span class="hljs-comment">--enablerepo=remi install php-channel-phpunit php-pear-PhpDocumentor php-phpunit-PHPUnit</span></code></pre><h2>Create a test application</h2>

<pre class="hljs"><code>mkdir /<span class="hljs-keyword">var</span>/www/</code></pre><p>In /var/www/index.php:</p>
<pre class="hljs"><code>&amp;lt;?<span class="hljs-function">php
  <span class="hljs-title">phpinfo</span><span class="hljs-params">()</span></span>;</code></pre><h2>Configure nginx</h2>

<p>In /etc/nginx/nginx.conf:</p>
<pre class="hljs"><code><span class="hljs-title">server</span> {
   <span class="hljs-title">listen</span>       <span class="hljs-number">80</span>;
   <span class="hljs-title">server<em>name</span>  </em>;
   <span class="hljs-title">access_log</span>  logs/host.access.log  main;
   <span class="hljs-title">root</span>   /var/www;
   <span class="hljs-title">index</span>  index.php index.html index.htm;
   <span class="hljs-title">location</span> <span class="hljs-regexp">~ .php$</span> {
      <span class="hljs-comment"># Security: must set cgi.fixpathinfo to 0 in php.ini!</span>
      <span class="hljs-title">fastcgi_split_path_info</span><span class="hljs-regexp"> ^(.+.php)(/.+)$</span>;
      <span class="hljs-title">fastcgi_pass</span> <span class="hljs-number">127.0.0.1:9000</span>;
      <span class="hljs-title">fastcgi_index</span> index.php;
      <span class="hljs-title">fastcgi_param</span> SCRIPT_FILENAME          <span class="hljs-variable">$document_root</span><span class="hljs-variable">$fastcgi_script_name</span>;
      <span class="hljs-title">fastcgi_param</span> PATH_INFO <span class="hljs-variable">$fastcgi_path_info</span>;
      <span class="hljs-title">include</span> /etc/nginx/fastcgi_params;
   }
}</code></pre><p><strong>Default fastcgi_params</strong></p>
<p>I start the php location by including /etc/nginx/fastcgi_params. This is because I want to use those as defaults, then override them individually afterwards. It is also recommended to have one root directive per server.</p>
<p><strong>PHP path</strong></p>
<p>I  use fastcgi_split_path_info which became available in 0.7.31 to pass PATH_INFO.</p>
<p><strong>Security settings</strong></p>
<p>IMPORTANT: Change cgi.fix_pathinfo to 0 in php.ini to prevent a <a href="http://cnedelcu.blogspot.com/2010/05/nginx-php-via-fastcgi-important.html">security issue</a> which arises with the default PHP configuration when PHP incorrectly tries to guess which file you want for URLS specifying nonexistent files. Setting cgi.fix_pathinfo=0 causes PHP to only try the literal path given. Alternatively check that the file exists: if (!-f $request_filename) { return 404; }</p>
<p>See also: <a href="http://wiki.nginx.org/Pitfalls">Nginx pitfalls</a>.</p>
<h2>Start/restart and test</h2>

<pre class="hljs"><code><span class="hljs-title">service</span> php-fpm start</code></pre><pre class="hljs"><code><span class="hljs-title">service</span> nginx restart</code></pre><p>Test by going to your server root, it should show you your phpinfo().</p>
<h2>Prepare to install node.js</h2>
Excellent post: <a href="http://wavded.tumblr.com/post/475957278/hosting-nodejs-apps-on-centos-5">http://wavded.tumblr.com/post/475957278/hosting-nodejs-apps-on-centos-5</a>

Add a user for node.js:

<code>bash
groupadd -r node
useradd -r --shell /bin/bash --comment &#39;User for running node.js&#39; -g node  --home /var/lib/node node</code>

I prefer using /var/lib/node rather than /home/node because this is more in line with how other server daemon users are defined (e.g. nginx, mysql). -r is for --system, --comment is for --gecos.

<h2>Install node.js</h2>

<pre class="hljs"><code>yum install gcc-<span class="hljs-keyword">c</span>++ openssl-devel
wget --<span class="hljs-keyword">no</span>-check-certificate http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/ry/node/tarball/v0.<span class="hljs-number">3.3</span>
tar -xzvf ry-node-v0.<span class="hljs-number">3.3</span>-<span class="hljs-number">0</span>-g57544ba.tar.gz
<span class="hljs-keyword">cd</span> ry-node-v0.<span class="hljs-number">3.3</span>-<span class="hljs-number">0</span>-g57544bac1
./configure
<span class="hljs-keyword">make</span>
<span class="hljs-keyword">make</span> install
<span class="hljs-built_in">mkdir</span> /var/node</code></pre><h2>Create a test application</h2>

<p>For node.js apps, I prefer to keep the www and node trees separate. Also note that I am running unstable 0.3.3 not 0.2.x, so the example is slightly different. Create the example file /var/node/hello_world/example.js:</p>
<pre class="hljs"><code><span class="hljs-keyword">var</span> sys = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;sys&quot;</span>),
   http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>);
http.createServer(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(request, response)</span> </span>{
  response.writeHead(<span class="hljs-number">200</span>, {<span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span>});
  response.end(<span class="hljs-string">&quot;Hello Worldn&quot;</span>);
}).listen(<span class="hljs-number">8000</span>);
sys.puts(<span class="hljs-string">&quot;Server running at 127.0.0.1:8000&quot;</span>);</code></pre><h2>Configure nginx for node.js (subdirectory approach)</h2>
In /etc/nginx/nginx.conf (after the server definition has started):

<code>bash
location /node {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Host $http_host;
   proxy_set_header X-NginX-Proxy true;
   proxy_pass http://127.0.0.1:8000/;
   proxy_redirect off;
}</code>

</div>
<h2>Install monit</h2>

<pre class="hljs"><code><span class="hljs-title">yum</span> install monit</code></pre><h2>Create monit script</h2>
/etc/monit.d/hello_world content:

<code>bash
check host hello_world with address 127.0.0.1
    start program = &quot;/usr/local/bin/node /var/node/hello_world/example.js&quot; as uid node and gid node
    stop program  = &quot;/usr/bin/pkill -f &#39;node /var/node/hello_world/example.js&#39;&quot;
    if failed port 8000 protocol HTTP
        request /
        with timeout 10 seconds
        then restart</code>

<h2>Start/restart and test</h2>

<pre class="hljs"><code><span class="hljs-title">service</span> monit start</code></pre><pre class="hljs"><code><span class="hljs-title">service</span> nginx restart</code></pre><p>Test by going to /node on your server.</p>
<p>Also, run ps -Af to verify that node is running with the uid node.</p>
<h2>The reboot test</h2>

<p>Finally, test everything by restarting your server. A friendly reminder:</p>
<pre class="hljs"><code>chkconfig nginx <span class="hljs-command"><span class="hljs-keyword">on</span></span>

chkconfig monit <span class="hljs-command"><span class="hljs-keyword">on</span></span>

chkconfig php-fpm <span class="hljs-command"><span class="hljs-keyword">on</span></span>

chkconfig mysqld <span class="hljs-command"><span class="hljs-keyword">on</span></span>

chkconfig <span class="hljs-comment">--list</span></code></pre><h2 id="comments">Comments</h2>
<p><strong><a href="#413" title="2011-07-16 17:03:08">Andy</a>:</strong> Great write up, still works on CentOS 6. Thanks!</p>
<p><strong><a href="#414" title="2011-07-25 18:41:07">Chris Abernethy</a>:</strong> Agreed, this is a great writeup on a good alternative to the standard apache stack.</p>
<p>If you&#39;re interested in also managing node.js with RPM, check out my post on that here: <a href="http://www.chrisabernethy.com/installing-node-js-on-centos-redhat/">http://www.chrisabernethy.com/installing-node-js-on-centos-redhat/</a></p>
<p><strong><a href="#415" title="2011-10-13 19:31:45">dim</a>:</strong> Hi, thx for this post, i am trying to do something similar on ubuntu, and he question i have is:</p>
<p>Does your setup works with simple websocket server written in nodejs (with socket io for example).</p>
<p>And 2nd question: what version of nginx do you use?</p>
<p>@ref  <a href="https://github.com/LearnBoost/socket.io/wiki/Nginx-and-Socket.io">https://github.com/LearnBoost/socket.io/wiki/Nginx-and-Socket.io</a></p>
<p>thanks !</p>
<p><strong><a href="#417" title="2012-03-14 05:59:54">nico</a>:</strong> Hi... recently i read this, mmm... it&#39;s really faster than previous configuration?</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Tue, 04 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Implementing Facebook login (part 2)]]></title><description><![CDATA[<p>In part 2 of my Facebook login tutorial, I will discuss implementing Facebook registration (see also: <a href="http://blog.mixu.net/2010/12/27/implementing-facebook-login-single-sign-on-part-1/">part 1</a> and <a href="http://blog.mixu.net/2011/01/09/implementing-facebook-login-part-3/">part 3</a>).</p>
<p>My design goals are to allow users to have either their own, separate account on the site or to link their account with Facebook. The design goals are:</p>
<p><ul>
    <li>User registration</p>
<p><ul>
    <li>Allow the user to register using Facebook and retrieve data from their profile to help fill in their information.</li>
    <li>Allow the user to register without using Facebook.</li>
    <li>Allow the user to add a Facebook profile later on to their account.</li>
    <li>Treat Facebook user ids just like email addresses: allow just one user account associated per Facebook user ID.</li>
</ul>
</li>
    <li>User login / authentication</p>
<p><ul>
    <li>Allow the user to sign in with just clicking a Sign in via Facebook button.</li>
    <li>Allow the user to sign in using their registered account name, if they have one.</li>
</ul>
</li>
</ul></p>
<p><h2>Registration flow</h2>
Facebook has recently (<a href="http://developers.facebook.com/blog/post/440">Dec 16th 2010</a>)  launched a registration tool for streamlining Facebook-based registration. We will be using it to implement the Facebook-enabled registration. However, since the dialog looks very &quot;facebooky&quot;, and some users will prefer not to have anything to do with Facebook, we will also offer our own registration form which looks more consistent with the site, but has no Facebook stuff in it.</p>
<p>The following diagram illustrates the registration flow with the Facebook alternative:</p>
<p><a href="http://blog.mixu.net/files/2010/12/flow2.png"><img class="alignnone size-full wp-image-1463" title="flow2" src="http://blog.mixu.net/files/2010/12/flow2.png" alt="" width="541" height="578" /></a></p>
<p>So basically, on the Login page, we will show a Facebook login link next to the regular login form, as well as normal registration link. If the user clicks the Facebook login link, then they will either be signed on via Facebook, or if they haven&#39;t signed up, they will be shown the Facebook enabled registration page. If the user clicks the regular registration link, they will be shown the non-Facebook registration page. Finally, the user can just login using their username and password on your site using the regular login form.</p>
<p><h2>Designing the Facebook-enabled registration page</h2>
If you already have a registration system on your site, you can leave that there. You then need to add the secondary, Facebook-enabled registration page.</p>
<p>The Facebook registration just needs to contain an iframe with the following content:</p>
<pre class="hljs"><code>&amp;lt;iframe <span class="hljs-variable">src=</span><span class="hljs-string">&quot;<a href="http://www.facebook.com/plugins/registration.php?">http://www.facebook.com/plugins/registration.php?</a>
             client_id=YOUR_APP_ID&amp;amp;
             redirect_uri=URLESCAPED_RETURN_PAGE
             fields=name,email&quot;</span>
        <span class="hljs-variable">scrolling=</span><span class="hljs-string">&quot;auto&quot;</span>
        <span class="hljs-variable">frameborder=</span><span class="hljs-string">&quot;no&quot;</span>
        <span class="hljs-variable">style=</span><span class="hljs-string">&quot;border:none&quot;</span>
        <span class="hljs-variable">allowTransparency=</span><span class="hljs-string">&quot;true&quot;</span>
        <span class="hljs-variable">width=</span><span class="hljs-string">&quot;100%&quot;</span>
        <span class="hljs-variable">height=</span><span class="hljs-string">&quot;310px&quot;</span>&amp;gt;
&amp;lt;/iframe&amp;gt;</code></pre><p>Check out the <a href="http://developers.facebook.com/docs/user_registration">Facebook documentation on what you can put in the fields</a>. The new registration tool can support custom fields. I will assume here that you just want their name and email.</p>
<p><h2>Receiving the data from the Facebook registration form</h2>
As you will notice from the Facebook documentation, the return value of the Facebook registration form is base64-encoded JSON, which includes an encoded (H)MAC (<a href="http://en.wikipedia.org/wiki/Message_authentication_code">message authentication code</a>) which is separated from the data itself by a single dot character.</p>
<p>First split the string, then decode the data (from Facebook&#39;s example code):</p>
<pre class="hljs"><code>&amp;lt;?php
  <span class="hljs-comment">// split to two variables based on the first dot character</span>
  <span class="hljs-keyword">list</span>(<span class="hljs-variable">$encoded_sig</span>, <span class="hljs-variable">$payload</span>) = explode(<span class="hljs-string">&#39;.&#39;</span>, <span class="hljs-variable">$signed_request</span>, <span class="hljs-number">2</span>);
  <span class="hljs-comment">// decode the data</span>
  <span class="hljs-variable">$sig</span> = base64_url_decode(<span class="hljs-variable">$encoded_sig</span>);
  <span class="hljs-variable">$data</span> = json_decode(base64_url_decode(<span class="hljs-variable">$payload</span>), <span class="hljs-keyword">true</span>);

  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#39;Hello &#39;</span>.<span class="hljs-variable">$data</span>[<span class="hljs-string">&#39;registration&#39;</span>][<span class="hljs-string">&#39;name&#39;</span>].<span class="hljs-string">&#39;!&#39;</span>;
  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#39;Your Facebook user ID is &#39;</span>.<span class="hljs-variable">$data</span>[<span class="hljs-string">&#39;user_id&#39;</span>].<span class="hljs-string">&#39;.&#39;</span>;</code></pre><p>You should also authenticate the return value using the secret key you received when you registered your website with Facebook. Otherwise, someone could fake a registration request and cause problems with user login. You can do it like this:</p>
<pre class="hljs"><code><span class="hljs-subst">&amp;</span><span class="hljs-literal">lt</span>;<span class="hljs-subst">?</span>php
  <span class="hljs-comment">// check the signature in $sig using $payload</span>
  <span class="hljs-keyword">if</span> (<span class="hljs-variable">$sig</span> <span class="hljs-subst">!==</span> hash_hmac(<span class="hljs-string">&#39;sha256&#39;</span>, <span class="hljs-variable">$payload</span>, FACEBOOK_SECRET, <span class="hljs-literal">TRUE</span>)) {
    <span class="hljs-comment">// INVALID SIGNATURE! Show an error message.</span>
  }</code></pre><p><h2>Saving the data into an existing user account system</h2>
There are number of things you want to take into account when saving the from the user data into the system:</p>
<p><ul>
    <li>Facebook does not give you a username for the user unless you ask for one. You can either:</p>
<p><ul>
    <li>Ask for one from the user as a custom field (easy, but I don&#39;t like it since it reduces the convenience of Facebook integration; and what about if that username is taken?).</li>
    <li>Make it so that you can have user accounts that do not have a username at all.</li>
    <li>In both cases, you have to make sure that the user cannot log in directly using the old style login, only via Facebook (unless you ask for a password as well).</li>
</ul>
</li>
    <li>The user might have already registered an account on your site with the same email address. In this case, you don&#39;t want to duplicate the user, and usually you can&#39;t since email addresses are expected to be unique across the system.</li>
    <li>You need to make database changes to add two pieces of information: first, the user&#39;s Facebook user id and second, the time-limited access token we need to retrieve more data from Facebook (oauth_token in the return value).</li>
</ul>
Since these are specific to your application, I can&#39;t say much about them. In any case, you want to add facebook_user_id as one field in the user information.</p>
<p><strong>Option 1</strong> would be to set the user name to empty for those users registered from Facebook. You then need to design your application so that it can show the full name of the user instead of the username elsewhere, since this field will now not necessarily be filled in. A properly designed app should not need to search for users by their username, but rather by user ID on your site. You also need to make sure that users with empty usernames/passwords cannot log in.</p>
<p><strong>Option 2</strong> would be to auto-generate a user id for the user based on their name. You need to make sure the username is not taken, and if it is, generate an alternative. Then you can allow the user to change their username later, as long as uniqueness checks are maintained. You need to make sure that users without a password cannot log in, or generate a really long random string as the password, hash it and forget the password completely.</p>
<p><strong>Option 3</strong> would be to ask for a username, and perhaps even a password - but then the only benefit is that you get some information typed in automatically, which does not make for a smooth experience (weren&#39;t we trying to avoid filling in fields here?).</p>
<p>I would go with option 2. While it does theoretically open the possibility that someone could guess the random string and autogenerated user id; I think there are easier avenues of attack such as guessing weak passwords.</p>
<p><h2>Next part</h2>
<a href="http://blog.mixu.net/2011/01/09/implementing-facebook-login-part-3/">In part 3 of my Facebook login tutorial</a> I go into implementation specifics using the Javascript SDK.</p>
<h2 id="comments">Comments</h2>
<p><strong><a href="#287" title="2011-03-01 13:26:13">Kabindra Bakey</a>:</strong> just the thing i need... its better with the logout system flowchart embeded too</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Mon, 03 Jan 2011 08:00:00 GMT</pubDate></item><item><title><![CDATA[Learning node.js: my experiences and helpful resources]]></title><description><![CDATA[<p>Here are my notes from learning node.js over the winter vacation. You can think of this post as asking me <em>what resources did you find helpful in learning node.js?</em> There is a lot of node.js stuff out there, but few posts on what is noteworthy, popular or tricky - I am sick of seeing posts explaining what node.js is and showing me the same five lines of code.</p>
<h2>Structuring code</h2>
I recommend reading the series on control flow in node.js from Tim Caswell:
<ul>
    <li><a href="http://howtonode.org/control-flow">http://howtonode.org/control-flow</a></li>
    <li><a href="http://howtonode.org/control-flow-part-ii">http://howtonode.org/control-flow-part-ii</a></li>
    <li><a href="http://howtonode.org/control-flow-part-iii">http://howtonode.org/control-flow-part-iii</a></li>
    <li><a href="http://howtonode.org/step-of-conductor">http://howtonode.org/step-of-conductor</a></li>
    <li><a href="http://howtonode.org/do-it-fast">http://howtonode.org/do-it-fast</a></li>
</ul>
Scope and this are different/tricky in JS, read <a href="http://howtonode.org/what-is-this">this</a> and <a href="http://stackoverflow.com/questions/4357881/how-can-i-maintain-scope-in-node-js-callbacks">this</a>.

<strong>Update Feb 2011:</strong>
<ul>
    <li>I wrote about <a href="http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/">the event loop in Node.js, and how it works</a>.</li>
    <li>And here is <a href="http://blog.mixu.net/2011/02/02/essential-node-js-patterns-and-snippets/">my list of essential patterns in Node.js</a>.</li>
    <li>And tomorrow (Feb 3rd), I&#39;ll publish something on the problems you run into with for loops.</li>
</ul>
<strong>Update Jan 2011: </strong>
<ul>
    <li>John Resig&#39;s <a href="http://ejohn.org/apps/learn/">online Javascript tutorial</a> is also great.</li>
    <li>You can refer back to this page about <a href="https://github.com/ry/node/wiki/ECMA-5-Mozilla-Features-Implemented-in-V8">what features of ECMAScript 5 are implemented in V8</a>.</li>
</ul>
<a href="http://www.bolinfest.com/javascript/inheritance.php">Inheritance patterns in Javascript</a> (using a modern style that optimizes well when using the Google Closure compiler).

You&#39;ll probably run into problems with assigning values if you use the class pattern. The problems is that adding variables in the prototype makes them shared among instances. You&#39;ll have to explicitly initialize any per-instance variables in the constructor, or otherwise the object instance will keep accessing the prototype property =&gt; property acts like it would be static. Obvious in retrospect, but hindsight makes fools of us all.
<h2>Modules</h2>
Have a look at the <a href="https://github.com/ry/node/wiki/modules">node.js modules page on github</a> for a comprehensive list of modules. Install <a href="http://npmjs.org/">npm</a> to install packages. Or don&#39;t, just drop the repos in a subdirectory and use require, since <a href="http://nodejs.org/docs/v0.3.2/api/modules.html">require in node.js is flexible</a>.
<h2>Debugging</h2>
Simply printing out stuff can be done using sys.puts(string) (first &quot;var sys = require(&#39;sys&#39;)&quot;).

Since you are on V8, you can use JSON.stringify(object) natively. console.log() also works, it automatically prettyprints objects, but only one level deep (no nested objects).

For those rare occasions where JSON.stringify(object) fails (e.g. due to recursion) you can use require(&#39;util&#39;).inspect(object) as an alternative.
<h2>Setting up the server</h2>
Update: Here is <a href="http://blog.mixu.net/2011/01/04/nginx-php-fpm-and-node-js-install-on-centos-5-5/">how I got Node.js up and running on Centos 5 with nginx + monit</a>.

First, you&#39;ll want to decide how you want to build your applications - will you use node.js for the whole stack, or will you mix it with more familiar scripting languages. If you want to mix two technology stacks, I strongly recommend NOT trying to combine node.js with other web app stacks using subdomains, since you&#39;ll have an unlimited amount of trouble due to the <a href="http://en.wikipedia.org/wiki/Same_origin_policy">same origin policy enforcement</a> that is built into all browsers. You can either solve that problem for all browsers:
<ul>
    <li>IE6/7 has no mechanism,</li>
    <li>IE8/9 has <a href="http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx">XDomainRequest</a>,</li>
    <li>Mozilla/Chrome/Opera have <a href="http://en.wikipedia.org/wiki/XMLHttpRequest">XMLHttpRequest </a>Level 2 (note that level 2 is needed for cross-domain support).</li>
</ul>
Or you can solve the problem on the server:
<ol>
    <li>by only using node.js for all of your stack, running a bare node.js server</li>
    <li>by running a mixed stack using Nginx or Apache to proxy node.js requests</li>
</ol>
I&#39;m not quite ready to start from scratch, given the productivity that my non-node-js stack gives; I did the mixed route with Apache which is adequate for trying things out. If you want to scale a bit more, you&#39;ll want to setup Nginx.

You can <a href="http://fortnightlabs.posterous.com/deploying-with-nodejs">proxy requests from Apache to Node.js</a> (<a href="http://groups.google.com/group/ajaxim/browse_thread/thread/b06b188dfc0e6a6d">second example</a>), or do a <a href="http://arguments.callee.info/2010/04/20/running-apache-and-node-js-together/">rewrite</a>. You&#39;ll want to use a subdirectory for node.js requests so that you don&#39;t have to deal with the same origin policy. Here is what I did:

<code>bash
&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin webmaster@localhost
    DocumentRoot /path/to/www/
    ServerName example.com
    ProxyPass /node/ http://127.0.0.1:8001/ retry=0 timeout=120
    &amp;lt;Proxy *&amp;gt;
        Allow from all
    &amp;lt;/Proxy&amp;gt;
&amp;lt;/VirtualHost&amp;gt;</code>

The &quot;retry=0&quot; parameter prevents Apache from waiting 60 seconds if a node.js response fails (e.g. due to server restart).
<h2>Comet with node.js</h2>
Have a look at socket.io (<a href="https://github.com/LearnBoost/Socket.IO-node">github page</a>) for streaming. In my testing, I couldn&#39;t get it to work with IE9 (sending stuff) and Chrome seemed to keep dropping connections. Firefox worked solidly and Chrome after I set it to reconnect, but I couldn&#39;t figure out why IE9 was not working (it could receive messages, but sending them did not seem to work..). I am sure that socket.io will get there, <em>reliable</em> real-time transmission in all major browsers just isn&#39;t quite yet a problem that has been solved neatly. <a href="http://groups.google.com/group/socket_io/browse_thread/thread/b1a32a19d14dd000">There are still issues to resolve, it seems</a>. To be fair, that&#39;s for cross-domain requests.

If you use socket.io, you will probably want to implement your own abstractions over it, since you&#39;ll want to do something with channels. There is the broadcast(message, list_of_excluded_user_ids) method, but you probably want to have more fine-grained control which can be done via additional abstractions.

There are also two other promising comet projects: Push-it and Faye. Push-it (<a href="http://github.com/aaronblohowiak/Push-It">github</a>, <a href="http://stackoverflow.com/questions/4445883/node-websocket-server-possible-to-have-multiple-separate-broadcasts-for-a-sin/4446178#4446178">stackoverflow</a>) is built on top of socket.io. Faye (<a href="http://faye.jcoglan.com/">homepage</a>, <a href="http://github.com/jcoglan/faye">github</a>) also looks interesting but I spotted this to-do on the repo: &quot;Detect failed WebSocket connection and fall back to polling transports&quot; - e.g. it doesn&#39;t seem to work in non-Websocket browsers (IE6/IE7), something I would like to have (in fact right now, Dec 2010 <a href="http://hacks.mozilla.org/2010/12/websockets-disabled-in-firefox-4/">WebSockets is disabled in newer FF 4 builds and Opera 11 due to security concerns</a>).
<h2>Connecting to MySQL</h2>

<h2 id="comments">Comments</h2>
<p><strong><a href="#298" title="2011-01-04 12:01:07">Will Tran</a>:</strong> <a href="http://www.devcomments.com/Update-benchmarks-for-Node-js-MySQL-drivers-at290013.htm">http://www.devcomments.com/Update-benchmarks-for-Node-js-MySQL-drivers-at290013.htm</a></p>
<p><strong><a href="#300" title="2011-11-10 18:06:42">Jagdish Hiray</a>:</strong> This is really good article. Have you come across way to call server side node js from client side js?</p>
<p>Thank you.</p>
<p><strong><a href="#301" title="2011-11-10 20:46:54">Mikito Takada</a>:</strong> Yeah, you can do that either by exposing an API, or using something like nowjs, which does the wrapping for you.</p>
<p>PS - for more stuff, read my book: <a href="http://book.mixu.net/">http://book.mixu.net/</a></p>
<p><strong><a href="#610" title="2013-01-06 17:20:12">enz54</a>:</strong> hi mikito,
quick question
I&#39;m develop a website using express and I&#39;m having difficulty deploying online. Do you know any hosting companies out there? Is it crucial that the host support node.js or you can use anyone? I tried appfog but every time I update my app I&#39;ve got error:
name: VmcError, endpoint: PUT:/apps/:name, statusCode: 500, code: 310, description: Staging failed: &#39;Staging task failed:
Staging plugin failed: /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/plugin.rb:80:in <code>guess_main_file&#39;: Unable to determine Node.js startup command (RuntimeError)
from /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/plugin.rb:29:in</code>detect_start_command&#39;
from /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/node_autoconfig.rb:27:in <code>setup_autoconfig&#39;
from /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/plugin.rb:14:in</code>block in stage_application&#39;
from /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/plugin.rb:9:in <code>chdir&#39;
from /opt/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/node/plugin.rb:9:in</code>stage_application&#39;
from /opt/cloudfoundry/vcap/stager/bin/run_plugin:19:in `&#39;</p>
<p>Your help will be just awesome!!!!</p>
<p>cheers
eric</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Thu, 30 Dec 2010 08:00:00 GMT</pubDate></item><item><title><![CDATA[Implementing Facebook login / single sign-on (part 1)]]></title><description><![CDATA[<p>I am implementing Facebook single sign on for my applications. In this first part of my Facebook authentication tutorial, I discuss the basics of the Facebook authentication process (see also: <a href="http://blog.mixu.net/2011/01/03/implementing-facebook-login-part-2/">part 2</a>, <a href="http://blog.mixu.net/2011/01/09/implementing-facebook-login-part-3/">part 3</a>).</p>
<p><h2>Getting started: some terminology</h2>
If you are like me and haven&#39;t implemented Facebook integration before, the terminology and various API&#39;s can be confusing. And the Facebook developer documentation is a combination of too-much-information and not-enough-explanation.</p>
<p>First, the Facebook documentation talks about different kinds of applications, which are:</p>
<ul>
    <li><strong>Facebook canvas applications</strong>: Applications-within-Facebook, or what users think of as &quot;Facebook apps&quot;.
<ul>
    <li>FBML / FBJS apps (built using FB-specific markup)</li>
    <li>Iframe canvas apps (built using Javascript and the FB JS API)</li>
</ul>
</li>
    <li><strong>Facebook desktop applications</strong> (rare; basically anything that cannot run within a browser, like a desktop client for Facebook)</li>
    <li><strong>Facebook web applications</strong> (websites with Facebook-integration such as single sign-on and custom Facebook elements within them such as CNN and Digg)</li>
</ul>
And there are multiple developer tools that Facebook offers:
<ul>
    <li><strong>Facebook Connect</strong> - no such thing exists anymore (e.g. <a href="http://mashable.com/2010/04/21/facebook-kills-facebook-connect/">http://mashable.com/2010/04/21/facebook-kills-facebook-connect/</a>). The new API is called the Graph API, and talking about Facebook Connect is inaccurate..</li>
    <li><strong>APIs</strong> (always used, either on the server side or on the client&#39;s web browser via Javascript)
<ul>
    <li><strong>Graph API</strong>: The new version of Facebook&#39;s API. The Graph API is much more than just authentication: it is the mechanism which powers Facebook applications and allows you to read and write date to Facebook.</li>
    <li><strong>Old REST API</strong>: The early version of Facebook&#39;s Graph API; Facebook does not recommend you use it because they are in the process of deprecating it.</li>
    <li><strong>FQL</strong> (Facebook Query Language): A SQL-like language for querying the Graph API. Supposedly makes using the API easier for apps.</li>
</ul>
</li>
    <li><strong>Markup </strong>
<ul>
    <li><strong>FBML</strong> (Facebook Markup Language): A HTML-like language for building Facebook applications. FBML is rendered on the Facebook server. Facebook does not recommend that you use it; instead suggesting that you use the Graph API via their Javascript SDK with XFBML.</li>
    <li><strong>XFBML</strong>: FBML-within-(X)HTML pages rendered using Facebook&#39;s Javascript SDK.</li>
</ul>
</li>
    <li><strong>SDKs </strong>
<ul>
    <li>Language-specific libraries for querying the API. Other than the Javascript SDK, it&#39;s all server-side and based on HTTP requests.</li>
    <li>Note that the Javascript SDK allows you to render XFBML embedded on a (X)HTML page! This was confusing because I had done something with FBML before, and didn&#39;t see where exactly the transformation from fb:login-button to HTML was occurring...</li>
</ul>
</li>
    <li><strong>Other stuff from Facebook: </strong>
<ul>
    <li><strong>Open Graph Protocol</strong>: A convention of meta and other tags which allows you to add metadata to Like button clicks, integrating them with Facebook (e.g. a like on a profile).</li>
    <li><strong>Social plugins</strong>: Ready-made Facebook widgets you can embed using an iframe.</li>
</ul>
</li>
</ul>
<h2>How does Facebook authentication work?</h2>
Conceptually, it works like this (picture of user represents page shown to user):

<a href="http://blog.mixu.net/files/2010/12/facebook.png"><img class="alignnone size-full wp-image-1446" title="facebook" src="http://blog.mixu.net/files/2010/12/facebook.png" alt="" width="471" height="581" /></a>

There most important authentication methods are:
<ol>
    <li><strong>Javascript single sign-on</strong>: The Javascript single sign-on is simplest, because it provides a function (FB.login) which handles everything from the details of OAuth 2.0 requests to rendering the actual login button. When using the Javascript API, the user id and access token are stored in a cookie (e.g. fbs_app_id) which you can access both server-side and via Javascript in the client.</li>
    <li><strong>web application authentication (using server side SDK&#39;s)</strong>: When you do web application authentication, you need redirect the user to Facebook in your app. When the user allows access for your app, Facebook redirects them back and sends the access token and user ID as part of the GET request to your authentication-complete redirection page. Then you can access the user&#39;s information using the returned token.</li>
</ol>
<h2>Next part</h2>
<a href="http://blog.mixu.net/2011/01/03/implementing-facebook-login-part-2/">In part 2 of my Facebook login tutorial</a> I address database design considerations and look at how Facebook login can be integrated with your existing user management.

<a href="http://blog.mixu.net/2011/01/09/implementing-facebook-login-part-3/">In part 3 of my Facebook login tutorial</a> I go into implementation specifics using the Javascript SDK.

<strong>References</strong>
<ul>
    <li><a href="http://developers.facebook.com/docs/">http://developers.facebook.com/docs/</a></li>
    <li><a href="http://developers.facebook.com/docs/guides/performance">http://developers.facebook.com/docs/guides/performance</a> (good illustration on the difference between FBML and IFrame applications)</li>
    <li><a href="http://stackoverflow.com/questions/1175047/facebook-app-vs-facebook-connect-site">http://stackoverflow.com/questions/1175047/facebook-app-vs-facebook-connect-site</a></li>
</ul>

<h2 id="comments">Comments</h2>
<p><strong><a href="#274" title="2011-01-02 08:28:25">Alex</a>:</strong> Thanks for creating this.  I am also confused about the ever-changing technologies FB is using.  I wish they made it simpler.  Your post helped me understand a bunch of different nuances. :)</p>
<p><strong><a href="#275" title="2011-01-08 23:15:55">Grant</a>:</strong> Thank you.  It&#39;s often only in seeing all of the pieces side by side that we understand.  I hadn&#39;t found something so clear and comprehensive as your post.</p>
<p><strong><a href="#676" title="2013-04-23 15:25:29">don11</a>:</strong> thanks. if the user logged out and or the cookies cleared. the access token will became invalid. what is the best way to handle that</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Mon, 27 Dec 2010 08:00:00 GMT</pubDate></item><item><title><![CDATA[5 principles of web application development productivity]]></title><description><![CDATA[<p>My early New Year&#39;s resolution is to ship more next year (why wait for next year to start?). With this in mind, I decided to write about increasing productivity in web app development (more posts coming!). In this first part, I will look at the principles behind getting more done quicker. In the next parts, I will look into the points marked with ** in more detail.</p>
<p>Based on a look at the top 400 or so questions tagged &quot;productivity&quot; on Stackoverflow, the five principles of web application development productivity are:</p>
<p><h2>1. Know your tools</h2>
Learn all you can about your particular language, framework and tools. <em>Doh!</em></p>
<p>Explore other people&#39;s solutions to your problems and learn best practices.</p>
<p>Use version control; diff tools, project/bug/feature tracking; virtual machines; VPS/platform-as-a-service providers when needed.</p>
<p><h2>2. Define your problem well</h2>
<a href="http://blog.mixu.net/files/2010/12/3145391821_f9d93e842d.jpg"><img class="alignnone size-full wp-image-1437" title="3145391821_f9d93e842d" src="http://blog.mixu.net/files/2010/12/3145391821_f9d93e842d.jpg" alt="" width="500" height="333" /></a></p>
<p>Get obsessed about your project: think about specifications, UI and implementation mechanisms when you&#39;re not coding. **</p>
<p>Don&#39;t get bogged down on details, and try to identify the most valuable parts of the project. Don&#39;t get too &quot;clever&quot; about features; gold-plating carries an opportunity cost.</p>
<p>If you use something more than <a href="http://www.codinghorror.com/blog/2007/05/your-favorite-programming-quote.html">three times</a>, make it reusable and think about how future features will influence the architecture.</p>
<p>Invest time in creating tools for recurring and error-prone parts of your project.</p>
<p><h2>3. Keep yourself and your team on track</h2>
<a href="http://blog.mixu.net/files/2010/12/3879260111_c56e8a0c1c.jpg"><img class="alignnone size-full wp-image-1438" title="3879260111_c56e8a0c1c" src="http://blog.mixu.net/files/2010/12/3879260111_c56e8a0c1c.jpg" alt="" width="500" height="333" /></a></p>
<p>Eliminate distractions; communicate frequently enough but keep it brief.</p>
<p>Stick to a <a href="http://en.wikipedia.org/wiki/Minimum_viable_product">MVP</a>; avoid scope creep.</p>
<p>Have a detailed to-do list. Keep to-dos small and specific enough that you can tick them off. If you can&#39;t determine whether the task is done, then refactor the description until it is unambiguous and small enough. Finish one task at a time.</p>
<p>Time-box your iterations and tasks (e.g. <a href="http://en.wikipedia.org/wiki/Pomodoro_Technique">Pomodoro technique</a>): set deadlines and create pressure by making a commitment (e.g. tell someone).</p>
<p>&quot;Accept that everything is a draft. It helps to get it done. Laugh at perfection. It&#39;s boring and keeps you from being done.&quot;</p>
<p>&quot;The point of being done is not to finish but to get other things done.&quot; In other words, get the first version done and then move on to the next most important thing. Get back to it if feedback indicates it&#39;s important.</p>
<p>Try to keep any projects/project iterations to less than a week long, so that your ideas about how it should work won&#39;t start diverging wildly from how your users actually think. Get feedback from real customers to re-orient yourself. If this not possible, try to involve someone else to bounce ideas off.</p>
<p><h2>4. Write less code</h2>
Think more about what you are writing and how to do it more intelligently.</p>
<p>Think about code organization for code reuse.</p>
<p>Use a language that allows for easy/quick constructs.</p>
<p>Use a framework that provides good classes/functionality for your problem.</p>
<p>Use standardized boilerplate code: <a href="http://www.thegridsystem.org/">CSS frameworks</a>, <a href="http://cakeplate.posterous.com/launching-cakeplate">boilerplate distributions</a>... **</p>
<p>Use libraries: emailing, captchas, admin, accounts... **</p>
<p><h2>5. Create fewer bugs</h2>
Use xUnit for your language and do TDD.</p>
<p>Automate testing: e.g. Selenium, continuous integration.</p>
<p><h2>Next part</h2>
In the next part I will discuss boilerplate code and problem definition in detail. See you soon!</p>
<p><h2><strong>References:</strong></h2></p>
<ul>
    <li><a href="http://news.ycombinator.com/item?id=2016316">Ask HN: How to be productive during a 48h startup weekend?</a></li>
    <li><span style="color: #000000;"><a href="http://stackoverflow.com/questions/453840/how-do-you-manage-to-write-high-quality-code-very-quickly">How do you manage to write high quality code very quickly?</a></span></li>
    <li><span style="color: #000000;"><a href="http://stackoverflow.com/questions/19155/how-do-i-become-a-programmer-who-gets-things-done">How do I become a programmer who &#39;gets things done&#39;?</a></span></li>
    <li><span style="color: #000000;"><a href="http://stackoverflow.com/questions/59561/what-tools-techniques-can-benefit-a-solo-developer">What tools/techniques can benefit a solo developer?</a></span></li>
    <li><span style="color: #000000;"><a href="http://www.brepettis.com/blog/2009/3/3/the-cult-of-done-manifesto.html">The Cult of Done Manifesto</a></span></li>
    <li><span style="color: #000000;"> </span><span style="color: #000000;"><a href="http://stackoverflow.com/questions/496817/do-you-find-that-programmers-generally-get-half-way-through-a-project-and-then-sl">Do you find that programmers generally get half way through a project and then slow to a crawl and how to resolve this?</a></span></li>
    <li><a href="http://stackoverflow.com/questions/35662/best-practices-when-going-dark-or-going-solo"><span style="color: #000000;">Best practices when “going dark” (or going solo)</span></a></li>
    <li><a href="http://www.flickr.com/photos/orcmid/3879260111/">http://www.flickr.com/photos/orcmid/3879260111/</a></li>
    <li><a href="http://www.flickr.com/photos/birgerking/3145391821/">http://www.flickr.com/photos/birgerking/3145391821/</a></li>
</ul>

<h2 id="comments">Comments</h2>
<p><strong><a href="#283" title="2010-12-24 10:54:18">Markus Koljonen</a>:</strong> It&#39;s all good, but whatever happened to user centered design? All these tips seem to revolve around the thought that the developer does their development all alone in a vat and that understanding of the user comes by thinking hard, which rarely really works. So put those mad coding skillz into best use: involve your target users with the concept development, UI testing and development priorisation!</p>
<p><strong><a href="#284" title="2010-12-27 14:35:55">Mikito Takada</a>:</strong> Hi Markus,</p>
<p>You are absolutely right and I should have given a bit more context for this post: I&#39;m attending Garage 48 in Helsinki in January (  <a href="http://www.garage48.org/events/helsinki-2011">http://www.garage48.org/events/helsinki-2011</a> ) and I wrote this post with that in mind.</p>
<p>So I don&#39;t really mean that a single developer should carry the world on their shoulders; there is a lot that can be done to better match user expectations and wants as well as having a real process for team activities - it&#39;s just that when you have 48h and are just a developer, then the extent to which you can get user feedback and develop team working methods is limited...</p>
<p><strong><a href="#285" title="2011-01-03 01:50:46">Markus Koljonen</a>:</strong> See you there ;)</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Wed, 22 Dec 2010 08:00:00 GMT</pubDate></item><item><title><![CDATA[Kohana-translate - an i18n module for collecting translations]]></title><description><![CDATA[<p>Previously, I did a <a href="http://blog.mixu.net/2010/11/11/kohana-3-i18n-tutorial/">tutorial on Kohana 3 internationalization</a>, and promised that I would create a better tool for collecting translations. Here it is:</p>
<p><a href="http://blog.mixu.net/files/2010/12/kohana-translate.png"><img title="kohana-translate" src="http://blog.mixu.net/files/2010/12/kohana-translate-300x165.png" alt="" width="300" height="165" /></a></p>
<p><a href="https://bitbucket.org/mixu/kohana-translate/src/b5be4b213332/modules/translate/">Kohana-translate</a> is a module for collecting translations. For a how-to on Kohana 3 internationalization, <a href="http://blog.mixu.net/2010/11/11/kohana-3-i18n-tutorial/">read my tutorial on i18n here</a>. The module was originally based on <a href="http://github.com/hinton/langify">Langify </a>(by hinton), but:</p>
<ul>
    <li>that module used the deprecated Sprig ORM,</li>
    <li>had a different idea of what the translation files should contain (e.g. key lookups rather than string lookups),</li>
    <li>did not include user management</li>
    <li>nor did it support locking translations (meaning that two translators working at the same time would overwrite each other&#39;s texts)</li>
    <li>nor did it deal with a number of niceties, such as:
<ul>
    <li>ability to update the translation later from a file,</li>
    <li>ability to specify which languages to translate to via UI,</li>
    <li>ability to upload translation files via UI,</li>
    <li>having a fancy-pants progress bar to motivate translators,</li>
</ul>
</li>
    <li>and edge cases (multiline string linefeed conversion, UTF8).</li>
</ul>
So I ended up rewriting all of the code, and am releasing it as Kohana-translate.

Get it from Bitbucket: <a href="http://bitbucket.org/mixu/kohana-translate">http://bitbucket.org/mixu/kohana-translate</a> (hg clone ssh://hg@bitbucket.org/mixu/kohana-translate).
<h2>Getting started</h2>
<div id="_mcePaste">This is a complete app with all dependencies. It  consists of two custom modules - most of the code is under /modules/translate/:</div>
<div id="_mcePaste">
<ul>
    <li>user: For user administration, see my <a href="http://blog.mixu.net/2010/09/14/kohana-3-auth-sample-implementation-and-documentation/">auth tutorial</a>.</li>
    <li>translate: For the translation itself.</li>
</ul>
</div>
<div id="_mcePaste">Just import backup.sql, fix the database connection settings and you should be set. You will probably also need to create ./application/cache for the cache.</div>
To install into an existing application:
<ul>
    <li>Place the module into your module folder + copy the helpers.</li>
    <li>Add the &quot;translate&quot; and &quot;user&quot; modules to your bootstrap.php file. Note: the &quot;user&quot; module should be required before &quot;auth&quot;.</li>
    <li>Import the backup.sql file into your database.</li>
</ul>

<h2 id="comments">Comments</h2>
<p><strong><a href="#279" title="2011-06-10 19:52:58">Faiyet</a>:</strong> Hi, I have built a kohana 3 site on my local machine and I am implementing your kohana-translate plugin. I already added the user and translate folders to my modules folder, hooked them up in bootstrap and configured my database with the necessary information.</p>
<p>At the moment all of the string data is &quot;hardcoded&quot;. Do I have to simply call the __(&quot;string&quot;) wherever I have a string?
Do I need to create the language files in the form XX-XX.php under the i18n folder?</p>
<p>Thanks you.</p>
<p><strong><a href="#280" title="2011-06-11 23:20:53">Mikito Takada</a>:</strong> Hi Faiyet,</p>
<p>For an overview of how Kohana 3 supports translation, look at <a href="http://blog.mixu.net/2010/11/11/kohana-3-i18n-tutorial/">http://blog.mixu.net/2010/11/11/kohana-3-i18n-tutorial/</a></p>
<p>To create the language files I suggest you patch the Kohana i18n to automatically collect the strings for translation:</p>
<p><a href="http://blog.mixu.net/2010/06/02/kohana3-automatically-collect-internationalization-strings/">http://blog.mixu.net/2010/06/02/kohana3-automatically-collect-internationalization-strings/</a></p>
<p>There might be some updates that are needed if you are using Kohana 3.1 as the code is for Ko3, but there haven&#39;t been many big changes...</p>
<p><strong><a href="#282" title="2012-03-13 07:42:56">Sven Walter</a>:</strong> Hey, i am using kohana 3.2 and i patched my i18n class... but there are no language strings collected. the write and get methods are called but it seems that there will be no data collected. i am going crazy^^</p>
<p>could you take a look at ko3.2 and youre translation scripts? thx</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Thu, 09 Dec 2010 08:00:00 GMT</pubDate></item><item><title><![CDATA[How to deploy web applications using Mercurial]]></title><description><![CDATA[<p>Does deploying changes to your site take too long? Are you tired of manually sorting out the update? Here is how to deploy your projects using Mercurial.</p>
<p><strong>Why?</strong></p>
<p><ul>
    <li>Ease of updating. Mercurial keeps track of the changes and only sends the necessary changes -  you don&#39;t need to worry about transferring files.</li>
    <li>Make it possible to roll back changes on the deployed site. You can use hg to roll back from a bad update if necessary.</li>
    <li>Once set up, it&#39;s beautiful. &quot;hg deploy&quot;. How can you not like that?</li>
</ul>
How is this different from <a href="http://blog.mixu.net/2010/10/04/setting-up-private-ssh-based-mercurial-repo-hosting-on-centos/">the other guide you wrote about setting up private repo hosting</a>?</p>
<p><ul>
    <li>While the differences aren&#39;t that big, this setup is better for <em>deployment </em>rather than <em>code distribution via repositories</em>:</p>
<p><ul>
    <li>Minimal dependencies. This approach only uses the hg-ssh script from the Mercurial core contrib.</li>
    <li>Manual configuration. You can set different directories for each repository which allows you to work with your existing webroot setup. However, you will need to manually add new repositories, since hg-ssh does not support adding new repositories remotely.</li>
</ul>
</li>
</ul>
If you want a private version of Bitbucket (without any additional features, of course), e.g.  to be able to remotely init/clone new repositories, <a href="http://blog.mixu.net/2010/10/04/setting-up-private-ssh-based-mercurial-repo-hosting-on-centos/">check out my other tutorial about setting up private repo hosting</a>.</p>
<h2 id="1-make-sure-that-the-hg-directories-are-never-served-to-the-public">1. Make sure that the .hg directories are never served to the public</h2>
<p>To prevent .hg directories from being accessible to other people, you can take a number of (optional, but recommended) precautions:</p>
<p><strong>Move the web root of your project to a different folder</strong></p>
<p>You can probably alter your project  repository so that you have an explicit webroot folder in which you only have the files that should be accessible to the public (bootstrap + js/css resources). This makes it less likely that you accidentally serve your .hg directory. You move the files within hg do this using hg move:</p>
<pre class="hljs"><code><span class="hljs-built_in">mkdir</span> webroot
hg <span class="hljs-keyword">move</span> . webroot</code></pre><p>Or you can use hg addremove --similarity=100 after moving the files manually. It will detect identical files as moved.</p>
<p>After this, you may need to update your apache config to serve from the webroot (e.g. adjust the DocumentRoot directive for the site / virtual host).</p>
<p><strong>Set up Apache not to serve .hg directories</strong></p>
<p>You can also prevent Apache from serving directories with .hg in them by adding the following to your httpd.conf:</p>
<pre class="hljs"><code><span class="hljs-subst">&amp;</span><span class="hljs-literal">lt</span>;DirectoryMatch <span class="hljs-built_in">.</span>hg<span class="hljs-subst">&amp;</span><span class="hljs-literal">gt</span>;
   <span class="hljs-keyword">Order</span> allow,deny
   Deny from <span class="hljs-literal">all</span>
<span class="hljs-subst">&amp;</span><span class="hljs-literal">lt</span>;/DirectoryMatch<span class="hljs-subst">&amp;</span><span class="hljs-literal">gt</span>;</code></pre><p>Restart Apache if you change httpd.conf.</p>
<h2 id="2-setup-the-server">2. Setup the server</h2>
<p><strong>Create the user</strong></p>
<pre class="hljs"><code><span class="hljs-comment"># make a system user (-r) with a home directory (-m)</span>
useradd -r -m hg
<span class="hljs-comment"># lock the user account</span>
usermod -<span class="hljs-constant">L </span>hg
&lt;span style=<span class="hljs-string">&quot;font-family: Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif; line-height: 19px; white-space: normal; font-size: 13px;&quot;</span>&gt;[<span class="hljs-regexp">/codesyntax]&lt;/span</span>&gt;</code></pre><p><strong>Setup ssh</strong></p>
<pre class="hljs"><code>#install mercurial <span class="hljs-keyword">if</span> not previously installed
yum install mercurial
su hg
cd <span class="hljs-regexp">/home/</span>hg/
wget <span class="hljs-string">http:</span><span class="hljs-comment">//www.selenic.com/repo/hg-stable/raw-file/tip/contrib/hg-ssh</span>
chmod u+x ~hg/hg-ssh
mkdir <span class="hljs-regexp">/home/</span>hg<span class="hljs-regexp">/.ssh/</span>
nano <span class="hljs-regexp">/home/</span>hg<span class="hljs-regexp">/.ssh/</span>authorized_keys
# remember to chmod the ssh config
chmod -R <span class="hljs-number">0700</span> <span class="hljs-regexp">/home/</span>hg<span class="hljs-regexp">/.ssh/</span></code></pre><p>Copy the public key: ssh-rsa ...(key data)== to /home/hg/.ssh/authorized_keys, one line for each authorized key.</p>
<p>Add the following in front of each authorized key in /home/hg/.ssh/authorized_keys:</p>
<pre class="hljs"><code>command=<span class="hljs-string">&quot;~hg/hg-ssh /path/to/repository&quot;</span>,no-port-forwarding,no-X11-forwarding,no-agent-forwarding ssh-rsa <span class="hljs-keyword">...</span>==</code></pre><p>If necessary, enable public key auth in /etc/ssh/sshd_config and add hg to the AllowUsers directive. Restart sshd if you change sshd_config.</p>
<h2 id="3-init-the-repo">3. Init the repo</h2>
<p><strong>New repo on the remote server</strong></p>
<p>Just run hg init in the new repo folder, then hg clone it on your computer from the remote server:</p>
<pre class="hljs"><code><span class="hljs-title">hg</span> clone -v --<span class="hljs-built_in">debug</span> <span class="hljs-url">ssh://hg<span class="hljs-variable">@server</span>:port/path/to/repo</span></code></pre><p>The -v and --debug make the clone show more information about what is going on.</p>
<p><strong>From existing sources</strong></p>
<p>Unfortunately hg-ssh does not support the hg init/hg clone command remotely. If you have an existing repo, you have to copy it first to the repository directory on the server. Since there are many files to move, I recommend gzipping the whole directory before moving it, then unzipping on the server. Do a hg log and hg status to see that everything transferred correctly.</p>
<p><strong>Adding more repos</strong></p>
<p>To add more repositories, simply add another repository path (separated by a space) immediately after the first repo path in .ssh/authorized_keys, and either init a new repo or copy an existing repo.</p>
<h2 id="4-push-updates">4. Push updates</h2>
<p>After you have the same repository on both the server and locally, you can start pushing  stuff to the server:</p>
<pre class="hljs"><code>hg push <span class="hljs-symbol">ssh:</span>/<span class="hljs-regexp">/hg@server:port/path</span><span class="hljs-regexp">/relative/to</span><span class="hljs-regexp">/home/dir</span></code></pre><p>If your repo path is not relative to the home dir, you need an extra slash in front of the push:</p>
<pre class="hljs"><code>hg push <span class="hljs-symbol">ssh:</span>/<span class="hljs-regexp">/hg@server:port/</span><span class="hljs-regexp">/path/relative</span><span class="hljs-regexp">/to/base</span><span class="hljs-regexp">/dir</span></code></pre><p>If you run into problems, try connecting via ssh - <a href="http://blog.mixu.net/2010/10/04/setting-up-private-ssh-based-mercurial-repo-hosting-on-centos/">see my previous post for some tips on this</a>.</p>
<h2 id="5-automate-hg-update">5. Automate hg update</h2>
<p>You should automate hg update so that each push causes the repository to be updated automatically to the pushed version. You can automate hg update on the remote repo by adding the following to the remote .hg/hgrc:</p>
<pre class="hljs"><code>[hooks]
changegroup = hg <span class="hljs-operator"><span class="hljs-keyword">update</span> &amp;gt;</span>&amp;amp;2</code></pre><p>Note that output has to be redirected to stderr (or /dev/null), because stdout is used for the data stream -which is why there is the &gt;&amp;2 at the end of the command.</p>
<p>If you get errors in updating automatically, check the permissions. In particular, make sure that .hg/ is owned by hg and that the content is readable by apache.</p>
<h2 id="6-set-up-default-push-or-create-an-alias">6. Set up default push or create an alias</h2>
<p>If you only push to one location, then you can set up the default locations for pull and push in the local  .hg/hgrc:</p>
<pre class="hljs"><code>[paths]
<span class="hljs-keyword">default</span> = ssh:<span class="hljs-comment">//hg@servername/reponame</span>
<span class="hljs-keyword">default</span>-<span class="hljs-keyword">push</span> = ssh<span class="hljs-comment">//:hg@servername/reponame</span></code></pre><p>This allows you to simply use &quot;hg push&quot; to deploy.</p>
<p>If you need more than one push location, create an alias in the local  .hg/hgrc:</p>
<pre class="hljs"><code>[<span class="hljs-keyword">alias</span>]
deploy = push -v --debug <span class="hljs-symbol">ssh:</span>/<span class="hljs-regexp">/hg@server:port/path</span><span class="hljs-regexp">/to/repo</span></code></pre><p>This allows you use &quot;hg deploy&quot; as an alias for deploying.</p>
<h2 id="what-about-configuration-files-">What about configuration files?</h2>
<p>One simple solution is to use &quot;hg forget&quot; to forget them once you have deployed the configuration files. This means that hg will not track the configuration files, but will not delete them either.</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Wed, 01 Dec 2010 08:00:00 GMT</pubDate></item><item><title><![CDATA[How to get Google Docs to full screen view (get rid of the stuff on top of the page)]]></title><description><![CDATA[<p>I find that I am using Google Docs a lot more these days. <strong>A major annoyance</strong> is that the Google logo and other useless tools take up space from the page, so I came up with the following simple bookmarklet:</p>
<p><a href="javascript:(function(){var elem = document.getElementById(&quot;docs-chrome&quot;);if (elem.style) {elem.style.display = ('' == elem.style.display)? 'none' : '';}})()">GDocs toggle</a></p>
<p>Just grab the link with your mouse, and drag it to your bookmarks bar. Click on it when you have a Google Docs page open, and it will hide / show the extra stuff on top of the page.</p>
<p><strong>Note: You may  have to resize your window once so that the text area expands, press F11 to do this quickly.</strong></p>
<p>I don&#39;t understand why this isn&#39;t included as a default feature - it used to be supported in Google Docs as a menu option.</p>
]]></description><link>http://localhost:5000undefined</link><guid isPermaLink="true">http://localhost:5000undefined</guid><dc:creator><![CDATA[Mixu]]></dc:creator><pubDate>Mon, 22 Nov 2010 08:00:00 GMT</pubDate></item></channel></rss>